<?xml version="1.0" encoding="utf-8"?>

<!-- authors: luc moreau

     *warning*
     transformation of the opm opmx schema into prov compatible.
     purely tentative at this stage. 

     In PROV-DM, all ids are qualified names, specified as prov:QualifiedName in PROV-N.
     In this schema, all ids are instead defined as xsd:QNames. The ProvToolbox
     implementation uses this schema in non-validating mode, so that
     prov:QualifiedNames are represented as java javax.xml.namespace.QName, and the xml tool properly
     manages the prefixes occurring in the prov:QualifiedNames.


     ISSUES to tackle:
     - How do we support internationalization? 
       There is explicit support for internationalization for label.
       How can we support xml:lang for any string, as per prov-dm?

  -->


<xs:schema targetNamespace="http://www.w3.org/ns/prov#"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:prov="http://www.w3.org/ns/prov#"
           xmlns:xml="http://www.w3.org/XML/1998/namespace"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">



  <xs:import namespace="http://www.w3.org/XML/1998/namespace" 
             schemaLocation="xml.xsd"/>

  <!-- Component 1 -->
  
  <xs:element name="entity" type="prov:Entity"/>
  <xs:complexType name="Entity">
    <xs:sequence>
       <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/> 
       <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
       <xs:element ref="prov:location"  minOccurs="0" maxOccurs="unbounded"/>
       <xs:element ref="prov:value" minOccurs="0" maxOccurs="1"/>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>  

  <xs:element name="activity" type="prov:Activity"/>
  <xs:complexType name="Activity">
    <xs:sequence>
      <xs:element name="startTime"    type="xs:dateTime" minOccurs="0"/> 
      <xs:element name="endTime"      type="xs:dateTime" minOccurs="0"/> 
      <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/> 
      <xs:element ref="prov:location"  minOccurs="0" maxOccurs="unbounded"/>
      
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>
  

  <xs:complexType name="Usage">
    <xs:sequence>
      <xs:element name="time"     type="xs:dateTime" minOccurs="0"/>
      <xs:element name="activity" type="prov:ActivityRef"/>
      <xs:element name="entity"   type="prov:EntityRef"/>
      <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:location"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:role"  minOccurs="0" maxOccurs="unbounded"/> 
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>
  
  <xs:complexType name="Generation">
    <xs:sequence>
      <xs:element name="time"     type="xs:dateTime" minOccurs="0"/>
      <xs:element name="entity"   type="prov:EntityRef"/>
      <xs:element name="activity" type="prov:ActivityRef" minOccurs="0"/>
      <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/> 
      <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:location"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:role"  minOccurs="0" maxOccurs="unbounded"/> 

      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <xs:complexType name="Start">
    <xs:sequence>
      <xs:element name="time"     type="xs:dateTime" minOccurs="0"/>
      <xs:element name="activity" type="prov:ActivityRef"/>
      <xs:element name="trigger"  type="prov:EntityRef" minOccurs="0"/>
      <xs:element name="starter"  type="prov:ActivityRef" minOccurs="0"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:location"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:role"  minOccurs="0" maxOccurs="unbounded"/> 
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <xs:complexType name="End">
    <xs:sequence>
      <xs:element name="time"     type="xs:dateTime" minOccurs="0"/>
      <xs:element name="activity" type="prov:ActivityRef"/>
      <xs:element name="trigger"  type="prov:EntityRef"  minOccurs="0"/>
      <xs:element name="ender"    type="prov:ActivityRef" minOccurs="0"/>
      <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/> 
      <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:location"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:role"  minOccurs="0" maxOccurs="unbounded"/> 
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <xs:complexType name="Invalidation">
    <xs:sequence>
      <xs:element name="time"     type="xs:dateTime" minOccurs="0"/>
      <xs:element name="entity"   type="prov:EntityRef"/>
      <xs:element name="activity" type="prov:ActivityRef" minOccurs="0"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:location"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:role"      minOccurs="0" maxOccurs="unbounded"/> 
      <xs:any namespace="##other"      minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>


  <xs:complexType name="Communication">
    <xs:sequence>
      <xs:element name="effect"  type="prov:ActivityRef"/>
      <xs:element name="cause"   type="prov:ActivityRef"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <!-- Component 2 -->

  
  <xs:complexType name="Derivation">
    <xs:sequence>
      <xs:element name="generation"       type="prov:GenerationRef" minOccurs="0"/>
      <xs:element name="usage"            type="prov:UsageRef" minOccurs="0"/>
      <xs:element name="activity"         type="prov:ActivityRef" minOccurs="0"/>
      <xs:element name="generatedEntity"  type="prov:EntityRef"/>
      <xs:element name="usedEntity"       type="prov:EntityRef"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <!-- Component 3 -->
  
  <xs:element name="agent" type="prov:Agent"/>
  <xs:complexType name="Agent">
    <xs:sequence>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="prov:location"  minOccurs="0" maxOccurs="unbounded"/>		
      <xs:any namespace="##other"  minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <xs:complexType name="Association">
    <xs:sequence>
      <xs:element name="activity" type="prov:ActivityRef"/>
      <xs:element name="agent"    type="prov:AgentRef"/>
      <xs:element name="plan"     type="prov:EntityRef" minOccurs="0"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="prov:role"  minOccurs="0" maxOccurs="unbounded"/> 
      <xs:any namespace="##other"  minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>


  <xs:complexType name="Attribution">
    <xs:sequence>
      <xs:element name="entity" type="prov:EntityRef"/>
      <xs:element name="agent"    type="prov:AgentRef"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:any namespace="##other"  minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <xs:complexType name="Delegation">
    <xs:sequence>
      <xs:element name="subordinate" type="prov:AgentRef"/>
      <xs:element name="responsible" type="prov:AgentRef"/>
      <xs:element name="activity"    type="prov:ActivityRef"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:any namespace="##other"  minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>


  <xs:complexType name="Influence">
    <xs:sequence>
      <xs:element name="influencee"     type="prov:AnyRef"/>
      <xs:element name="influencer"     type="prov:AnyRef"/>
      <xs:element ref="prov:label" minOccurs="0" maxOccurs="unbounded"/> 
      <xs:element ref="prov:type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <!-- Component 4 -->

  <!-- Component 5 -->

  <xs:complexType name="Alternate">
    <xs:sequence>
      <xs:element name="alternate1"   type="prov:EntityRef"/>
      <xs:element name="alternate2"   type="prov:EntityRef"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Specialization">
    <xs:sequence>
      <xs:element name="specificEntity"   type="prov:EntityRef"/>
      <xs:element name="generalEntity"   type="prov:EntityRef"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Mention">
    <xs:sequence>
      <xs:element name="specificEntity" type="prov:EntityRef"/>
      <xs:element name="generalEntity"     type="prov:EntityRef"/>
      <xs:element name="bundle"            type="prov:EntityRef" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>

  
  <!-- Component 6 -->
<!-- 
  <xs:complexType name="DerivedByInsertionFrom">
    <xs:sequence>
      <xs:element name="after"           type="prov:EntityRef"/>
      <xs:element name="before"          type="prov:EntityRef"/>
      <xs:element name="entry"           type="prov:Entry" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:any namespace="##other"  minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <xs:complexType name="DerivedByRemovalFrom">
    <xs:sequence>
      <xs:element name="after"    type="prov:EntityRef"/>
      <xs:element name="before"   type="prov:EntityRef"/>
      <xs:element name="key"      type="xs:anySimpleType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:any namespace="##other"  minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <xs:complexType name="CollectionMemberOf">
    <xs:sequence>
      <xs:element name="entity"          type="prov:EntityRef"/>
      <xs:element name="complete"        type="xs:boolean"/>
      <xs:element name="member"          type="prov:Entity" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:any namespace="##other"  minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <xs:complexType name="DictionaryMemberOf">
    <xs:sequence>
      <xs:element name="entity"          type="prov:EntityRef"/>
      <xs:element name="complete"        type="xs:boolean"/>
      <xs:element name="entry"           type="prov:Entry" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element ref="prov:label" minOccurs="0"  maxOccurs="unbounded"/> 
      <xs:element ref="prov:type"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:any namespace="##other"  minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>


  <xs:element name="key"  type="xs:anySimpleType"/>

  <xs:complexType name="Entry">
    <xs:sequence>
      <xs:element ref="prov:key"  minOccurs="1" maxOccurs="1"/>
      <xs:element name="entity"   type="prov:EntityRef" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>

-->

  <xs:complexType name="Membership">
    <xs:sequence>
      <xs:element name="collection"          type="prov:EntityRef"/>
      <xs:element name="entity"          type="prov:EntityRef" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

 
  <xs:complexType name="InternationalizedString">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>    


   <!--
       Typed literals are encoded by means
       of xsi:type that represent the prov:datatype.

       -->
  
  <xs:element name="label"    type="prov:InternationalizedString"/>
  <xs:element name="role"     type="xs:anySimpleType"/>
  <xs:element name="type"     type="xs:anySimpleType"/>
  <xs:element name="location" type="xs:anySimpleType"/>
  <xs:element name="value"    type="xs:anySimpleType"/>

  <!-- See comment in preamble.
       These should be prov:QualifiedName
       but instead are xsd:QName for tools to process them -->

  <xs:attribute name="id"  type="xs:QName"/>
  <xs:attribute name="ref" type="xs:QName"/>

  <xs:complexType name="ActivityRef">
    <xs:attribute ref="prov:ref"/>
  </xs:complexType>
  <xs:complexType name="EntityRef">
    <xs:attribute ref="prov:ref"/>
  </xs:complexType>
  <xs:complexType name="AgentRef">
    <xs:attribute ref="prov:ref"/>
  </xs:complexType>
  
  <xs:complexType name="UsageRef">
   	     <xs:attribute ref="prov:ref" use="required"/>
  </xs:complexType>
  <xs:complexType name="GenerationRef">
    <xs:attribute ref="prov:ref" use="required"/>
  </xs:complexType>
  
  
  <xs:complexType name="AnyRef">
    <xs:attribute ref="prov:ref"/>
  </xs:complexType>


  <xs:group name="documentElements">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="entity"               type="prov:Entity"/>
        <xs:element name="activity"             type="prov:Activity"/>
        <xs:element name="wasGeneratedBy"       type="prov:Generation"/>
        <xs:element name="used"                 type="prov:Usage"/>
        <xs:element name="wasInformedBy"        type="prov:Communication"/>
        <xs:element name="wasStartedBy"         type="prov:Start"/>
        <xs:element name="wasEndedBy"           type="prov:End"/>
        <xs:element name="wasInvalidatedBy"     type="prov:Invalidation"/>

        <xs:element name="wasDerivedFrom"       type="prov:Derivation"/>

        <xs:element name="agent"                type="prov:Agent"/>
        <xs:element name="wasAttributedTo"      type="prov:Attribution"/>
        <xs:element name="wasAssociatedWith"    type="prov:Association"/>
        <xs:element name="actedOnBehalfOf"      type="prov:Delegation"/>
        <xs:element name="wasInfluencedBy"      type="prov:Influence"/>
        
        <xs:element name="specializationOf"     type="prov:Specialization"/>
        <xs:element name="alternateOf"          type="prov:Alternate"/>
        <xs:element name="mentionOf"            type="prov:Mention"/>

        <xs:element name="hadMember"   		type="prov:Membership"/>

<!-- not nice for jaxb conversion 		<xs:any namespace="##other"/>  -->
      </xs:choice>
    </xs:sequence>
  </xs:group>
 
   <xs:element name="document" type="prov:Document" />
   <xs:complexType name="Document">
     <xs:sequence>
       <xs:choice maxOccurs="unbounded">
         <xs:group ref="prov:documentElements"/>
         <xs:element name="bundle" type="prov:NamedBundle"/>
       </xs:choice>
     </xs:sequence>
   </xs:complexType>
   
  
  <xs:complexType name="Statements">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
       <xs:group ref="prov:documentElements"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  
  
  <xs:complexType name="NamedBundle">
    <xs:sequence>
      <xs:group ref="prov:documentElements"/>
    </xs:sequence>
    <xs:attribute ref="prov:id"/>
  </xs:complexType>

  <xs:simpleType name="QualifiedName">
    <xs:restriction base="xs:string">
      <xs:pattern value="(([\i-[:]][\c-[:]]*)?:)?.+" />
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType> 

  

<!-- To support validator, this is not part of prov xml! -->

  <xs:element name="used"               type="prov:Usage"/>
  <xs:element name="wasGeneratedBy"     type="prov:Generation"/>
  <xs:element name="wasStartedBy"       type="prov:Start"/>
  <xs:element name="wasEndedBy"         type="prov:End"/>
  <xs:element name="wasInvalidatedBy"   type="prov:Invalidation"/>
  <xs:element name="wasInformedBy"      type="prov:Communication"/>
  <xs:element name="wasDerivedFrom"     type="prov:Derivation"/>
  <xs:element name="wasAssociatedWith"  type="prov:Association"/>
  <xs:element name="actedOnBehalfOf"    type="prov:Delegation"/>
  <xs:element name="wasAttributedTo"    type="prov:Attribution"/>
  <xs:element name="wasInfluencedBy"    type="prov:Influence"/>
  <xs:element name="specializationOf"   type="prov:Specialization"/>
  <xs:element name="alternateOf"        type="prov:Alternate"/>
  <xs:element name="mentionOf"          type="prov:Mention"/>
  <xs:element name="hadMember"          type="prov:Membership"/>
  
  
</xs:schema>
