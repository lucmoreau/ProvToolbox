<?xml version="1.0" encoding="utf-8"?>



<xs:schema targetNamespace="http://openprovenance.org/validation#"
	elementFormDefault="qualified" attributeFormDefault="unqualified"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:val="http://openprovenance.org/validation#"
	xmlns:prov="http://www.w3.org/ns/prov#">

	<xs:import schemaLocation="prov-20130307.xsd"
		namespace="http://www.w3.org/ns/prov#">
	</xs:import>
	
	<xs:element name="validationReport" type="val:ValidationReport" />

  <xs:complexType name="Statements">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
       <xs:group ref="prov:documentElements"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  


        <xs:complexType name="ValidationReport">
                <xs:sequence>
                        <xs:element name="cycle" type="val:Dependencies"
                                minOccurs="0" maxOccurs="unbounded" />
                        <xs:element name="nonStrictCycle" type="val:Dependencies"
                                minOccurs="0" maxOccurs="unbounded" />
                        <xs:element name="failedMerge" type="val:MergeReport"
                                minOccurs="0" maxOccurs="unbounded" />
                        <xs:element name="successfulMerge" type="val:MergeReport"
                                minOccurs="0" maxOccurs="unbounded" />
                        <xs:element name="qualifiedNameMismatch"
                                type="val:MergeReport" minOccurs="0" maxOccurs="unbounded" />
                        <xs:element name="specializationReport"
                                type="val:SpecializationReport" />
                        <xs:element name="typeReport" type="val:TypeReport" />
                        <xs:element name="typeOverlap" type="val:TypeOverlap"
                                minOccurs="0" maxOccurs="unbounded" />
                        <xs:element name="validationReport"
                                    type="val:ValidationReport" minOccurs="0" maxOccurs="unbounded" />
                        <xs:element name="malformedStatements" type="val:MalformedStatements"
				    minOccurs="0" maxOccurs="1" />
				        <xs:element name="deposited" type="xs:boolean"/>
			<xs:element ref="prov:document"/>
		</xs:sequence>
		<xs:attribute ref="prov:id" />	
	</xs:complexType>


	<xs:complexType name="MergeReport">
		<xs:complexContent>
			<xs:extension base="val:Statements">
				<xs:attribute name="key" type="xs:string" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="MalformedStatements">
	    <xs:sequence maxOccurs="unbounded" >
            <xs:group ref="prov:documentElements" />
        </xs:sequence>
       
    </xs:complexType>

    
	<xs:complexType name="TypeReport">
		<xs:sequence>
			<xs:group ref="prov:documentElements" />
		</xs:sequence>
		<xs:attribute name="key" type="xs:string" />
	</xs:complexType>

	<xs:complexType name="TypeOverlap">
		<xs:sequence>
			<xs:element name="type" type="xs:string" minOccurs="0"
				maxOccurs="unbounded" />
		</xs:sequence>
		<xs:attribute name="key" type="xs:string" />
	</xs:complexType>

	<xs:complexType name="SpecializationReport">
		<xs:sequence>
			<xs:element ref="prov:specializationOf" minOccurs="0"
				maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>



	<!-- Component 6 -->




	<xs:complexType name="Dependencies">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">

				<xs:element ref="prov:used"/>
				<xs:element ref="prov:wasGeneratedBy" />
				<xs:element ref="prov:wasStartedBy"/>
				<xs:element ref="prov:wasEndedBy"/>
				<xs:element ref="prov:wasInvalidatedBy" />
				<xs:element ref="prov:wasInformedBy"/>


				<xs:element ref="prov:wasDerivedFrom" />
				<xs:element ref="prov:wasAttributedTo" />
				<xs:element ref="prov:wasAssociatedWith" />
				<xs:element ref="prov:actedOnBehalfOf" />
				<xs:element ref="prov:wasInfluencedBy" />
				<xs:element ref="prov:alternateOf" />
				<xs:element ref="prov:specializationOf" />
				<xs:element ref="prov:mentionOf" />
				<xs:element ref="prov:hadMember" />

			</xs:choice>
		</xs:sequence>
	</xs:complexType>




</xs:schema>
