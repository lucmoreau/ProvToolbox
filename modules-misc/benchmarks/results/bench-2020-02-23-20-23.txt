# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyJava

# Run progress: 0.00% complete, ETA 00:40:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.151 ops/us
# Warmup Iteration   2: 0.160 ops/us
# Warmup Iteration   3: 0.160 ops/us
Iteration   1: 0.159 ops/us
Iteration   2: 0.159 ops/us
Iteration   3: 0.157 ops/us
Iteration   4: 0.158 ops/us
Iteration   5: 0.159 ops/us


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyJava":
  0.159 ±(99.9%) 0.003 ops/us [Average]
  (min, avg, max) = (0.157, 0.159, 0.159), stdev = 0.001
  CI (99.9%): [0.156, 0.161] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyScala

# Run progress: 3.33% complete, ETA 00:39:13
# Fork: 1 of 1
# Warmup Iteration   1: 0.023 ops/us
# Warmup Iteration   2: 0.025 ops/us
# Warmup Iteration   3: 0.025 ops/us
Iteration   1: 0.025 ops/us
Iteration   2: 0.025 ops/us
Iteration   3: 0.025 ops/us
Iteration   4: 0.025 ops/us
Iteration   5: 0.025 ops/us


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyScala":
  0.025 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.025, 0.025, 0.025), stdev = 0.001
  CI (99.9%): [0.025, 0.025] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseJson

# Run progress: 6.67% complete, ETA 00:37:48
# Fork: 1 of 1
# Warmup Iteration   1: 0.079 ops/us
# Warmup Iteration   2: 0.084 ops/us
# Warmup Iteration   3: 0.084 ops/us
Iteration   1: 0.084 ops/us
Iteration   2: 0.084 ops/us
Iteration   3: 0.084 ops/us
Iteration   4: 0.084 ops/us
Iteration   5: 0.084 ops/us


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseJson":
  0.084 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.084, 0.084, 0.084), stdev = 0.001
  CI (99.9%): [0.084, 0.085] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialisePJson

# Run progress: 10.00% complete, ETA 00:36:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.019 ops/us
# Warmup Iteration   2: 0.022 ops/us
# Warmup Iteration   3: 0.022 ops/us
Iteration   1: 0.022 ops/us
Iteration   2: 0.022 ops/us
Iteration   3: 0.022 ops/us
Iteration   4: 0.022 ops/us
Iteration   5: 0.022 ops/us


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialisePJson":
  0.022 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.022, 0.022, 0.022), stdev = 0.001
  CI (99.9%): [0.022, 0.022] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvJsonLD

# Run progress: 13.33% complete, ETA 00:35:05
# Fork: 1 of 1
# Warmup Iteration   1: 0.033 ops/us
# Warmup Iteration   2: 0.036 ops/us
# Warmup Iteration   3: 0.037 ops/us
Iteration   1: 0.037 ops/us
Iteration   2: 0.037 ops/us
Iteration   3: 0.037 ops/us
Iteration   4: 0.037 ops/us
Iteration   5: 0.036 ops/us


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvJsonLD":
  0.037 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.036, 0.037, 0.037), stdev = 0.001
  CI (99.9%): [0.036, 0.037] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvN

# Run progress: 16.67% complete, ETA 00:33:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.010 ops/us
# Warmup Iteration   2: 0.011 ops/us
# Warmup Iteration   3: 0.011 ops/us
Iteration   1: 0.011 ops/us
Iteration   2: 0.011 ops/us
Iteration   3: 0.011 ops/us
Iteration   4: 0.011 ops/us
Iteration   5: 0.011 ops/us


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvN":
  0.011 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.011, 0.011, 0.011), stdev = 0.001
  CI (99.9%): [0.011, 0.012] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testReadScala

# Run progress: 20.00% complete, ETA 00:32:23
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻³ ops/us
# Warmup Iteration   2: ≈ 10⁻³ ops/us
# Warmup Iteration   3: ≈ 10⁻³ ops/us
Iteration   1: ≈ 10⁻³ ops/us
Iteration   2: ≈ 10⁻³ ops/us
Iteration   3: ≈ 10⁻³ ops/us
Iteration   4: ≈ 10⁻³ ops/us
Iteration   5: ≈ 10⁻³ ops/us


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testReadScala":
  ≈ 10⁻³ ops/us


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialisePJson

# Run progress: 23.33% complete, ETA 00:31:02
# Fork: 1 of 1
# Warmup Iteration   1: 0.026 ops/us
# Warmup Iteration   2: 0.028 ops/us
# Warmup Iteration   3: 0.028 ops/us
Iteration   1: 0.028 ops/us
Iteration   2: 0.027 ops/us
Iteration   3: 0.028 ops/us
Iteration   4: 0.028 ops/us
Iteration   5: 0.028 ops/us


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialisePJson":
  0.028 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.027, 0.028, 0.028), stdev = 0.001
  CI (99.9%): [0.027, 0.028] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvJsonLD

# Run progress: 26.67% complete, ETA 00:29:42
# Fork: 1 of 1
# Warmup Iteration   1: 0.017 ops/us
# Warmup Iteration   2: 0.019 ops/us
# Warmup Iteration   3: 0.019 ops/us
Iteration   1: 0.019 ops/us
Iteration   2: 0.019 ops/us
Iteration   3: 0.019 ops/us
Iteration   4: 0.019 ops/us
Iteration   5: 0.019 ops/us


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvJsonLD":
  0.019 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.019, 0.019, 0.019), stdev = 0.001
  CI (99.9%): [0.019, 0.019] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvN

# Run progress: 30.00% complete, ETA 00:28:20
# Fork: 1 of 1
# Warmup Iteration   1: 0.064 ops/us
# Warmup Iteration   2: 0.069 ops/us
# Warmup Iteration   3: 0.068 ops/us
Iteration   1: 0.069 ops/us
Iteration   2: 0.069 ops/us
Iteration   3: 0.069 ops/us
Iteration   4: 0.069 ops/us
Iteration   5: 0.069 ops/us


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvN":
  0.069 ±(99.9%) 0.001 ops/us [Average]
  (min, avg, max) = (0.069, 0.069, 0.069), stdev = 0.001
  CI (99.9%): [0.068, 0.070] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyJava

# Run progress: 33.33% complete, ETA 00:27:00
# Fork: 1 of 1
# Warmup Iteration   1: 6.638 us/op
# Warmup Iteration   2: 6.298 us/op
# Warmup Iteration   3: 6.307 us/op
Iteration   1: 6.315 us/op
Iteration   2: 6.297 us/op
Iteration   3: 6.302 us/op
Iteration   4: 6.321 us/op
Iteration   5: 6.304 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyJava":
  6.308 ±(99.9%) 0.038 us/op [Average]
  (min, avg, max) = (6.297, 6.308, 6.321), stdev = 0.010
  CI (99.9%): [6.270, 6.346] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyScala

# Run progress: 36.67% complete, ETA 00:25:38
# Fork: 1 of 1
# Warmup Iteration   1: 44.519 us/op
# Warmup Iteration   2: 40.899 us/op
# Warmup Iteration   3: 40.721 us/op
Iteration   1: 40.768 us/op
Iteration   2: 40.956 us/op
Iteration   3: 40.788 us/op
Iteration   4: 40.745 us/op
Iteration   5: 41.006 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyScala":
  40.853 ±(99.9%) 0.460 us/op [Average]
  (min, avg, max) = (40.745, 40.853, 41.006), stdev = 0.119
  CI (99.9%): [40.393, 41.312] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseJson

# Run progress: 40.00% complete, ETA 00:24:18
# Fork: 1 of 1
# Warmup Iteration   1: 12.692 us/op
# Warmup Iteration   2: 12.068 us/op
# Warmup Iteration   3: 12.035 us/op
Iteration   1: 12.037 us/op
Iteration   2: 12.048 us/op
Iteration   3: 12.069 us/op
Iteration   4: 12.033 us/op
Iteration   5: 12.036 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseJson":
  12.045 ±(99.9%) 0.058 us/op [Average]
  (min, avg, max) = (12.033, 12.045, 12.069), stdev = 0.015
  CI (99.9%): [11.987, 12.102] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialisePJson

# Run progress: 43.33% complete, ETA 00:22:57
# Fork: 1 of 1
# Warmup Iteration   1: 51.656 us/op
# Warmup Iteration   2: 45.915 us/op
# Warmup Iteration   3: 46.174 us/op
Iteration   1: 45.994 us/op
Iteration   2: 45.930 us/op
Iteration   3: 46.064 us/op
Iteration   4: 45.911 us/op
Iteration   5: 45.814 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialisePJson":
  45.943 ±(99.9%) 0.361 us/op [Average]
  (min, avg, max) = (45.814, 45.943, 46.064), stdev = 0.094
  CI (99.9%): [45.581, 46.304] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvJsonLD

# Run progress: 46.67% complete, ETA 00:21:36
# Fork: 1 of 1
# Warmup Iteration   1: 30.538 us/op
# Warmup Iteration   2: 27.020 us/op
# Warmup Iteration   3: 26.912 us/op
Iteration   1: 26.985 us/op
Iteration   2: 26.919 us/op
Iteration   3: 26.907 us/op
Iteration   4: 27.470 us/op
Iteration   5: 27.000 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvJsonLD":
  27.056 ±(99.9%) 0.904 us/op [Average]
  (min, avg, max) = (26.907, 27.056, 27.470), stdev = 0.235
  CI (99.9%): [26.152, 27.960] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvN

# Run progress: 50.00% complete, ETA 00:20:15
# Fork: 1 of 1
# Warmup Iteration   1: 99.864 us/op
# Warmup Iteration   2: 89.673 us/op
# Warmup Iteration   3: 89.605 us/op
Iteration   1: 89.312 us/op
Iteration   2: 89.875 us/op
Iteration   3: 89.678 us/op
Iteration   4: 89.369 us/op
Iteration   5: 89.636 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvN":
  89.574 ±(99.9%) 0.895 us/op [Average]
  (min, avg, max) = (89.312, 89.574, 89.875), stdev = 0.232
  CI (99.9%): [88.679, 90.469] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testReadScala

# Run progress: 53.33% complete, ETA 00:18:54
# Fork: 1 of 1
# Warmup Iteration   1: 2865.885 us/op
# Warmup Iteration   2: 2697.184 us/op
# Warmup Iteration   3: 2682.544 us/op
Iteration   1: 2674.601 us/op
Iteration   2: 2669.511 us/op
Iteration   3: 2679.823 us/op
Iteration   4: 2668.134 us/op
Iteration   5: 2668.851 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testReadScala":
  2672.184 ±(99.9%) 19.142 us/op [Average]
  (min, avg, max) = (2668.134, 2672.184, 2679.823), stdev = 4.971
  CI (99.9%): [2653.042, 2691.325] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialisePJson

# Run progress: 56.66% complete, ETA 00:17:32
# Fork: 1 of 1
# Warmup Iteration   1: 38.736 us/op
# Warmup Iteration   2: 36.212 us/op
# Warmup Iteration   3: 35.976 us/op
Iteration   1: 36.019 us/op
Iteration   2: 36.017 us/op
Iteration   3: 36.035 us/op
Iteration   4: 36.091 us/op
Iteration   5: 35.968 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialisePJson":
  36.026 ±(99.9%) 0.170 us/op [Average]
  (min, avg, max) = (35.968, 36.026, 36.091), stdev = 0.044
  CI (99.9%): [35.856, 36.196] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvJsonLD

# Run progress: 60.00% complete, ETA 00:16:11
# Fork: 1 of 1
# Warmup Iteration   1: 57.549 us/op
# Warmup Iteration   2: 51.554 us/op
# Warmup Iteration   3: 51.418 us/op
Iteration   1: 51.420 us/op
Iteration   2: 51.521 us/op
Iteration   3: 51.293 us/op
Iteration   4: 51.357 us/op
Iteration   5: 51.733 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvJsonLD":
  51.465 ±(99.9%) 0.662 us/op [Average]
  (min, avg, max) = (51.293, 51.465, 51.733), stdev = 0.172
  CI (99.9%): [50.803, 52.127] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvN

# Run progress: 63.33% complete, ETA 00:14:51
# Fork: 1 of 1
# Warmup Iteration   1: 16.154 us/op
# Warmup Iteration   2: 14.383 us/op
# Warmup Iteration   3: 14.451 us/op
Iteration   1: 14.357 us/op
Iteration   2: 14.321 us/op
Iteration   3: 14.371 us/op
Iteration   4: 14.341 us/op
Iteration   5: 14.303 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvN":
  14.339 ±(99.9%) 0.105 us/op [Average]
  (min, avg, max) = (14.303, 14.339, 14.371), stdev = 0.027
  CI (99.9%): [14.234, 14.444] (assumes normal distribution)


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyJava

# Run progress: 66.66% complete, ETA 00:13:30
# Fork: 1 of 1
# Warmup Iteration   1: 7.076 ±(99.9%) 0.236 us/op
# Warmup Iteration   2: 6.544 ±(99.9%) 0.078 us/op
# Warmup Iteration   3: 6.535 ±(99.9%) 0.070 us/op
Iteration   1: 6.549 ±(99.9%) 0.069 us/op
                 testDeepCopyJava·p0.00:   5.832 us/op
                 testDeepCopyJava·p0.50:   6.144 us/op
                 testDeepCopyJava·p0.90:   6.496 us/op
                 testDeepCopyJava·p0.95:   6.816 us/op
                 testDeepCopyJava·p0.99:   20.192 us/op
                 testDeepCopyJava·p0.999:  32.855 us/op
                 testDeepCopyJava·p0.9999: 751.990 us/op
                 testDeepCopyJava·p1.00:   989.184 us/op

Iteration   2: 6.537 ±(99.9%) 0.073 us/op
                 testDeepCopyJava·p0.00:   5.848 us/op
                 testDeepCopyJava·p0.50:   6.144 us/op
                 testDeepCopyJava·p0.90:   6.456 us/op
                 testDeepCopyJava·p0.95:   6.744 us/op
                 testDeepCopyJava·p0.99:   20.160 us/op
                 testDeepCopyJava·p0.999:  31.440 us/op
                 testDeepCopyJava·p0.9999: 757.337 us/op
                 testDeepCopyJava·p1.00:   1039.360 us/op

Iteration   3: 6.528 ±(99.9%) 0.081 us/op
                 testDeepCopyJava·p0.00:   5.840 us/op
                 testDeepCopyJava·p0.50:   6.144 us/op
                 testDeepCopyJava·p0.90:   6.456 us/op
                 testDeepCopyJava·p0.95:   6.752 us/op
                 testDeepCopyJava·p0.99:   20.128 us/op
                 testDeepCopyJava·p0.999:  31.868 us/op
                 testDeepCopyJava·p0.9999: 121.459 us/op
                 testDeepCopyJava·p1.00:   2351.104 us/op

Iteration   4: 6.522 ±(99.9%) 0.060 us/op
                 testDeepCopyJava·p0.00:   5.832 us/op
                 testDeepCopyJava·p0.50:   6.136 us/op
                 testDeepCopyJava·p0.90:   6.512 us/op
                 testDeepCopyJava·p0.95:   6.816 us/op
                 testDeepCopyJava·p0.99:   20.192 us/op
                 testDeepCopyJava·p0.999:  31.850 us/op
                 testDeepCopyJava·p0.9999: 101.780 us/op
                 testDeepCopyJava·p1.00:   974.848 us/op

Iteration   5: 6.529 ±(99.9%) 0.079 us/op
                 testDeepCopyJava·p0.00:   5.816 us/op
                 testDeepCopyJava·p0.50:   6.136 us/op
                 testDeepCopyJava·p0.90:   6.448 us/op
                 testDeepCopyJava·p0.95:   6.728 us/op
                 testDeepCopyJava·p0.99:   20.128 us/op
                 testDeepCopyJava·p0.999:  31.926 us/op
                 testDeepCopyJava·p0.9999: 734.873 us/op
                 testDeepCopyJava·p1.00:   2400.256 us/op



Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyJava":
  N = 969839
  mean =      6.533 ±(99.9%) 0.033 us/op

  Histogram, us/op:
    [   0.000,  250.000) = 969739 
    [ 250.000,  500.000) = 0 
    [ 500.000,  750.000) = 12 
    [ 750.000, 1000.000) = 81 
    [1000.000, 1250.000) = 4 
    [1250.000, 1500.000) = 0 
    [1500.000, 1750.000) = 0 
    [1750.000, 2000.000) = 0 
    [2000.000, 2250.000) = 1 
    [2250.000, 2500.000) = 2 
    [2500.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =      5.816 us/op
     p(50.0000) =      6.144 us/op
     p(90.0000) =      6.472 us/op
     p(95.0000) =      6.768 us/op
     p(99.0000) =     20.160 us/op
     p(99.9000) =     32.000 us/op
     p(99.9900) =    688.194 us/op
     p(99.9990) =    979.172 us/op
     p(99.9999) =   2400.256 us/op
    p(100.0000) =   2400.256 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyScala

# Run progress: 70.00% complete, ETA 00:12:09
# Fork: 1 of 1
# Warmup Iteration   1: 46.759 ±(99.9%) 2.203 us/op
# Warmup Iteration   2: 42.212 ±(99.9%) 0.172 us/op
# Warmup Iteration   3: 42.200 ±(99.9%) 0.160 us/op
Iteration   1: 42.358 ±(99.9%) 0.160 us/op
                 testDeepCopyScala·p0.00:   39.104 us/op
                 testDeepCopyScala·p0.50:   40.320 us/op
                 testDeepCopyScala·p0.90:   43.136 us/op
                 testDeepCopyScala·p0.95:   54.848 us/op
                 testDeepCopyScala·p0.99:   80.768 us/op
                 testDeepCopyScala·p0.999:  143.100 us/op
                 testDeepCopyScala·p0.9999: 984.447 us/op
                 testDeepCopyScala·p1.00:   2371.584 us/op

Iteration   2: 42.240 ±(99.9%) 0.143 us/op
                 testDeepCopyScala·p0.00:   38.976 us/op
                 testDeepCopyScala·p0.50:   40.320 us/op
                 testDeepCopyScala·p0.90:   42.752 us/op
                 testDeepCopyScala·p0.95:   50.112 us/op
                 testDeepCopyScala·p0.99:   81.408 us/op
                 testDeepCopyScala·p0.999:  135.587 us/op
                 testDeepCopyScala·p0.9999: 963.398 us/op
                 testDeepCopyScala·p1.00:   1097.728 us/op

Iteration   3: 42.209 ±(99.9%) 0.146 us/op
                 testDeepCopyScala·p0.00:   39.104 us/op
                 testDeepCopyScala·p0.50:   40.384 us/op
                 testDeepCopyScala·p0.90:   42.688 us/op
                 testDeepCopyScala·p0.95:   51.808 us/op
                 testDeepCopyScala·p0.99:   80.384 us/op
                 testDeepCopyScala·p0.999:  133.412 us/op
                 testDeepCopyScala·p0.9999: 996.656 us/op
                 testDeepCopyScala·p1.00:   1144.832 us/op

Iteration   4: 42.241 ±(99.9%) 0.167 us/op
                 testDeepCopyScala·p0.00:   38.976 us/op
                 testDeepCopyScala·p0.50:   40.320 us/op
                 testDeepCopyScala·p0.90:   42.944 us/op
                 testDeepCopyScala·p0.95:   53.952 us/op
                 testDeepCopyScala·p0.99:   80.000 us/op
                 testDeepCopyScala·p0.999:  130.392 us/op
                 testDeepCopyScala·p0.9999: 983.115 us/op
                 testDeepCopyScala·p1.00:   2469.888 us/op

Iteration   5: 42.190 ±(99.9%) 0.151 us/op
                 testDeepCopyScala·p0.00:   39.104 us/op
                 testDeepCopyScala·p0.50:   40.320 us/op
                 testDeepCopyScala·p0.90:   42.752 us/op
                 testDeepCopyScala·p0.95:   49.088 us/op
                 testDeepCopyScala·p0.99:   80.000 us/op
                 testDeepCopyScala·p0.999:  139.638 us/op
                 testDeepCopyScala·p0.9999: 947.146 us/op
                 testDeepCopyScala·p1.00:   2359.296 us/op



Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyScala":
  N = 591651
  mean =     42.248 ±(99.9%) 0.069 us/op

  Histogram, us/op:
    [   0.000,  250.000) = 591533 
    [ 250.000,  500.000) = 6 
    [ 500.000,  750.000) = 2 
    [ 750.000, 1000.000) = 66 
    [1000.000, 1250.000) = 40 
    [1250.000, 1500.000) = 0 
    [1500.000, 1750.000) = 0 
    [1750.000, 2000.000) = 0 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 4 
    [2500.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     38.976 us/op
     p(50.0000) =     40.320 us/op
     p(90.0000) =     42.816 us/op
     p(95.0000) =     53.568 us/op
     p(99.0000) =     80.512 us/op
     p(99.9000) =    136.448 us/op
     p(99.9900) =    970.752 us/op
     p(99.9990) =   1169.415 us/op
     p(99.9999) =   2469.888 us/op
    p(100.0000) =   2469.888 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseJson

# Run progress: 73.33% complete, ETA 00:10:48
# Fork: 1 of 1
# Warmup Iteration   1: 12.608 ±(99.9%) 0.227 us/op
# Warmup Iteration   2: 11.889 ±(99.9%) 0.057 us/op
# Warmup Iteration   3: 11.901 ±(99.9%) 0.063 us/op
Iteration   1: 11.896 ±(99.9%) 0.062 us/op
                 testDeserialiseJson·p0.00:   10.896 us/op
                 testDeserialiseJson·p0.50:   11.312 us/op
                 testDeserialiseJson·p0.90:   11.824 us/op
                 testDeserialiseJson·p0.95:   12.368 us/op
                 testDeserialiseJson·p0.99:   29.472 us/op
                 testDeserialiseJson·p0.999:  48.719 us/op
                 testDeserialiseJson·p0.9999: 109.401 us/op
                 testDeserialiseJson·p1.00:   1945.600 us/op

Iteration   2: 11.908 ±(99.9%) 0.066 us/op
                 testDeserialiseJson·p0.00:   10.896 us/op
                 testDeserialiseJson·p0.50:   11.312 us/op
                 testDeserialiseJson·p0.90:   11.840 us/op
                 testDeserialiseJson·p0.95:   12.432 us/op
                 testDeserialiseJson·p0.99:   28.446 us/op
                 testDeserialiseJson·p0.999:  48.217 us/op
                 testDeserialiseJson·p0.9999: 109.409 us/op
                 testDeserialiseJson·p1.00:   2146.304 us/op

Iteration   3: 11.871 ±(99.9%) 0.061 us/op
                 testDeserialiseJson·p0.00:   10.880 us/op
                 testDeserialiseJson·p0.50:   11.312 us/op
                 testDeserialiseJson·p0.90:   11.824 us/op
                 testDeserialiseJson·p0.95:   12.384 us/op
                 testDeserialiseJson·p0.99:   27.658 us/op
                 testDeserialiseJson·p0.999:  46.524 us/op
                 testDeserialiseJson·p0.9999: 94.487 us/op
                 testDeserialiseJson·p1.00:   2244.608 us/op

Iteration   4: 11.872 ±(99.9%) 0.052 us/op
                 testDeserialiseJson·p0.00:   10.896 us/op
                 testDeserialiseJson·p0.50:   11.312 us/op
                 testDeserialiseJson·p0.90:   11.824 us/op
                 testDeserialiseJson·p0.95:   12.400 us/op
                 testDeserialiseJson·p0.99:   29.516 us/op
                 testDeserialiseJson·p0.999:  48.719 us/op
                 testDeserialiseJson·p0.9999: 103.840 us/op
                 testDeserialiseJson·p1.00:   945.152 us/op

Iteration   5: 11.882 ±(99.9%) 0.055 us/op
                 testDeserialiseJson·p0.00:   10.880 us/op
                 testDeserialiseJson·p0.50:   11.312 us/op
                 testDeserialiseJson·p0.90:   11.840 us/op
                 testDeserialiseJson·p0.95:   12.432 us/op
                 testDeserialiseJson·p0.99:   27.872 us/op
                 testDeserialiseJson·p0.999:  49.152 us/op
                 testDeserialiseJson·p0.9999: 103.794 us/op
                 testDeserialiseJson·p1.00:   1093.632 us/op



Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseJson":
  N = 1054127
  mean =     11.886 ±(99.9%) 0.027 us/op

  Histogram, us/op:
    [   0.000,  250.000) = 1054057 
    [ 250.000,  500.000) = 0 
    [ 500.000,  750.000) = 7 
    [ 750.000, 1000.000) = 55 
    [1000.000, 1250.000) = 5 
    [1250.000, 1500.000) = 0 
    [1500.000, 1750.000) = 0 
    [1750.000, 2000.000) = 1 
    [2000.000, 2250.000) = 2 
    [2250.000, 2500.000) = 0 
    [2500.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     10.880 us/op
     p(50.0000) =     11.312 us/op
     p(90.0000) =     11.840 us/op
     p(95.0000) =     12.400 us/op
     p(99.0000) =     28.375 us/op
     p(99.9000) =     48.384 us/op
     p(99.9900) =    104.576 us/op
     p(99.9990) =    988.761 us/op
     p(99.9999) =   2239.287 us/op
    p(100.0000) =   2244.608 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialisePJson

# Run progress: 76.66% complete, ETA 00:09:27
# Fork: 1 of 1
# Warmup Iteration   1: 51.969 ±(99.9%) 1.354 us/op
# Warmup Iteration   2: 46.410 ±(99.9%) 0.168 us/op
# Warmup Iteration   3: 46.389 ±(99.9%) 0.150 us/op
Iteration   1: 46.427 ±(99.9%) 0.170 us/op
                 testDeserialisePJson·p0.00:   42.752 us/op
                 testDeserialisePJson·p0.50:   44.352 us/op
                 testDeserialisePJson·p0.90:   47.360 us/op
                 testDeserialisePJson·p0.95:   58.048 us/op
                 testDeserialisePJson·p0.99:   89.679 us/op
                 testDeserialisePJson·p0.999:  154.553 us/op
                 testDeserialisePJson·p0.9999: 984.064 us/op
                 testDeserialisePJson·p1.00:   2473.984 us/op

Iteration   2: 46.349 ±(99.9%) 0.150 us/op
                 testDeserialisePJson·p0.00:   42.752 us/op
                 testDeserialisePJson·p0.50:   44.352 us/op
                 testDeserialisePJson·p0.90:   46.912 us/op
                 testDeserialisePJson·p0.95:   57.536 us/op
                 testDeserialisePJson·p0.99:   87.424 us/op
                 testDeserialisePJson·p0.999:  148.519 us/op
                 testDeserialisePJson·p0.9999: 962.429 us/op
                 testDeserialisePJson·p1.00:   1095.680 us/op

Iteration   3: 46.622 ±(99.9%) 0.174 us/op
                 testDeserialisePJson·p0.00:   42.688 us/op
                 testDeserialisePJson·p0.50:   44.352 us/op
                 testDeserialisePJson·p0.90:   48.576 us/op
                 testDeserialisePJson·p0.95:   58.496 us/op
                 testDeserialisePJson·p0.99:   91.648 us/op
                 testDeserialisePJson·p0.999:  160.310 us/op
                 testDeserialisePJson·p0.9999: 984.355 us/op
                 testDeserialisePJson·p1.00:   2400.256 us/op

Iteration   4: 46.475 ±(99.9%) 0.156 us/op
                 testDeserialisePJson·p0.00:   42.688 us/op
                 testDeserialisePJson·p0.50:   44.288 us/op
                 testDeserialisePJson·p0.90:   47.936 us/op
                 testDeserialisePJson·p0.95:   58.176 us/op
                 testDeserialisePJson·p0.99:   90.606 us/op
                 testDeserialisePJson·p0.999:  154.748 us/op
                 testDeserialisePJson·p0.9999: 949.740 us/op
                 testDeserialisePJson·p1.00:   1183.744 us/op

Iteration   5: 46.405 ±(99.9%) 0.156 us/op
                 testDeserialisePJson·p0.00:   42.752 us/op
                 testDeserialisePJson·p0.50:   44.352 us/op
                 testDeserialisePJson·p0.90:   47.872 us/op
                 testDeserialisePJson·p0.95:   57.984 us/op
                 testDeserialisePJson·p0.99:   89.728 us/op
                 testDeserialisePJson·p0.999:  157.513 us/op
                 testDeserialisePJson·p0.9999: 968.617 us/op
                 testDeserialisePJson·p1.00:   1118.208 us/op



Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialisePJson":
  N = 537972
  mean =     46.455 ±(99.9%) 0.072 us/op

  Histogram, us/op:
    [   0.000,  250.000) = 537856 
    [ 250.000,  500.000) = 14 
    [ 500.000,  750.000) = 0 
    [ 750.000, 1000.000) = 67 
    [1000.000, 1250.000) = 33 
    [1250.000, 1500.000) = 0 
    [1500.000, 1750.000) = 0 
    [1750.000, 2000.000) = 0 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 2 
    [2500.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     42.688 us/op
     p(50.0000) =     44.352 us/op
     p(90.0000) =     47.808 us/op
     p(95.0000) =     58.048 us/op
     p(99.0000) =     89.635 us/op
     p(99.9000) =    154.887 us/op
     p(99.9900) =    966.864 us/op
     p(99.9990) =   1111.987 us/op
     p(99.9999) =   2473.984 us/op
    p(100.0000) =   2473.984 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvJsonLD

# Run progress: 80.00% complete, ETA 00:08:06
# Fork: 1 of 1
# Warmup Iteration   1: 31.068 ±(99.9%) 1.275 us/op
# Warmup Iteration   2: 27.648 ±(99.9%) 0.086 us/op
# Warmup Iteration   3: 27.581 ±(99.9%) 0.090 us/op
Iteration   1: 27.614 ±(99.9%) 0.083 us/op
                 testDeserialiseProvJsonLD·p0.00:   25.280 us/op
                 testDeserialiseProvJsonLD·p0.50:   26.368 us/op
                 testDeserialiseProvJsonLD·p0.90:   27.840 us/op
                 testDeserialiseProvJsonLD·p0.95:   30.560 us/op
                 testDeserialiseProvJsonLD·p0.99:   56.704 us/op
                 testDeserialiseProvJsonLD·p0.999:  94.464 us/op
                 testDeserialiseProvJsonLD·p0.9999: 746.611 us/op
                 testDeserialiseProvJsonLD·p1.00:   1050.624 us/op

Iteration   2: 27.574 ±(99.9%) 0.087 us/op
                 testDeserialiseProvJsonLD·p0.00:   25.312 us/op
                 testDeserialiseProvJsonLD·p0.50:   26.368 us/op
                 testDeserialiseProvJsonLD·p0.90:   27.712 us/op
                 testDeserialiseProvJsonLD·p0.95:   30.336 us/op
                 testDeserialiseProvJsonLD·p0.99:   56.640 us/op
                 testDeserialiseProvJsonLD·p0.999:  90.594 us/op
                 testDeserialiseProvJsonLD·p0.9999: 849.328 us/op
                 testDeserialiseProvJsonLD·p1.00:   1120.256 us/op

Iteration   3: 27.532 ±(99.9%) 0.090 us/op
                 testDeserialiseProvJsonLD·p0.00:   25.280 us/op
                 testDeserialiseProvJsonLD·p0.50:   26.368 us/op
                 testDeserialiseProvJsonLD·p0.90:   27.712 us/op
                 testDeserialiseProvJsonLD·p0.95:   30.304 us/op
                 testDeserialiseProvJsonLD·p0.99:   55.872 us/op
                 testDeserialiseProvJsonLD·p0.999:  87.381 us/op
                 testDeserialiseProvJsonLD·p0.9999: 710.777 us/op
                 testDeserialiseProvJsonLD·p1.00:   2392.064 us/op

Iteration   4: 27.665 ±(99.9%) 0.082 us/op
                 testDeserialiseProvJsonLD·p0.00:   25.312 us/op
                 testDeserialiseProvJsonLD·p0.50:   26.368 us/op
                 testDeserialiseProvJsonLD·p0.90:   27.968 us/op
                 testDeserialiseProvJsonLD·p0.95:   30.688 us/op
                 testDeserialiseProvJsonLD·p0.99:   58.240 us/op
                 testDeserialiseProvJsonLD·p0.999:  96.248 us/op
                 testDeserialiseProvJsonLD·p0.9999: 699.023 us/op
                 testDeserialiseProvJsonLD·p1.00:   1116.160 us/op

Iteration   5: 27.540 ±(99.9%) 0.082 us/op
                 testDeserialiseProvJsonLD·p0.00:   25.248 us/op
                 testDeserialiseProvJsonLD·p0.50:   26.336 us/op
                 testDeserialiseProvJsonLD·p0.90:   27.712 us/op
                 testDeserialiseProvJsonLD·p0.95:   30.272 us/op
                 testDeserialiseProvJsonLD·p0.99:   56.576 us/op
                 testDeserialiseProvJsonLD·p0.999:  91.836 us/op
                 testDeserialiseProvJsonLD·p0.9999: 806.545 us/op
                 testDeserialiseProvJsonLD·p1.00:   1026.048 us/op



Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvJsonLD":
  N = 905743
  mean =     27.585 ±(99.9%) 0.038 us/op

  Histogram, us/op:
    [   0.000,  250.000) = 905650 
    [ 250.000,  500.000) = 1 
    [ 500.000,  750.000) = 1 
    [ 750.000, 1000.000) = 69 
    [1000.000, 1250.000) = 21 
    [1250.000, 1500.000) = 0 
    [1500.000, 1750.000) = 0 
    [1750.000, 2000.000) = 0 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 1 
    [2500.000, 2750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     25.248 us/op
     p(50.0000) =     26.368 us/op
     p(90.0000) =     27.744 us/op
     p(95.0000) =     30.426 us/op
     p(99.0000) =     56.640 us/op
     p(99.9000) =     92.032 us/op
     p(99.9900) =    757.019 us/op
     p(99.9990) =   1062.794 us/op
     p(99.9999) =   2392.064 us/op
    p(100.0000) =   2392.064 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvN

# Run progress: 83.33% complete, ETA 00:06:45
# Fork: 1 of 1
# Warmup Iteration   1: 103.020 ±(99.9%) 4.040 us/op
# Warmup Iteration   2: 91.534 ±(99.9%) 0.230 us/op
# Warmup Iteration   3: 91.069 ±(99.9%) 0.222 us/op
Iteration   1: 91.424 ±(99.9%) 0.246 us/op
                 testDeserialiseProvN·p0.00:   83.456 us/op
                 testDeserialiseProvN·p0.50:   87.040 us/op
                 testDeserialiseProvN·p0.90:   95.744 us/op
                 testDeserialiseProvN·p0.95:   115.712 us/op
                 testDeserialiseProvN·p0.99:   165.888 us/op
                 testDeserialiseProvN·p0.999:  253.045 us/op
                 testDeserialiseProvN·p0.9999: 1042.507 us/op
                 testDeserialiseProvN·p1.00:   2555.904 us/op

Iteration   2: 91.427 ±(99.9%) 0.226 us/op
                 testDeserialiseProvN·p0.00:   83.328 us/op
                 testDeserialiseProvN·p0.50:   87.040 us/op
                 testDeserialiseProvN·p0.90:   96.000 us/op
                 testDeserialiseProvN·p0.95:   115.584 us/op
                 testDeserialiseProvN·p0.99:   167.680 us/op
                 testDeserialiseProvN·p0.999:  246.451 us/op
                 testDeserialiseProvN·p0.9999: 1071.247 us/op
                 testDeserialiseProvN·p1.00:   1183.744 us/op

Iteration   3: 91.433 ±(99.9%) 0.226 us/op
                 testDeserialiseProvN·p0.00:   83.328 us/op
                 testDeserialiseProvN·p0.50:   86.912 us/op
                 testDeserialiseProvN·p0.90:   95.872 us/op
                 testDeserialiseProvN·p0.95:   116.608 us/op
                 testDeserialiseProvN·p0.99:   168.192 us/op
                 testDeserialiseProvN·p0.999:  247.344 us/op
                 testDeserialiseProvN·p0.9999: 1045.376 us/op
                 testDeserialiseProvN·p1.00:   1247.232 us/op

Iteration   4: 91.395 ±(99.9%) 0.225 us/op
                 testDeserialiseProvN·p0.00:   83.456 us/op
                 testDeserialiseProvN·p0.50:   86.912 us/op
                 testDeserialiseProvN·p0.90:   95.872 us/op
                 testDeserialiseProvN·p0.95:   115.814 us/op
                 testDeserialiseProvN·p0.99:   167.680 us/op
                 testDeserialiseProvN·p0.999:  248.943 us/op
                 testDeserialiseProvN·p0.9999: 1047.701 us/op
                 testDeserialiseProvN·p1.00:   1187.840 us/op

Iteration   5: 91.411 ±(99.9%) 0.228 us/op
                 testDeserialiseProvN·p0.00:   83.456 us/op
                 testDeserialiseProvN·p0.50:   86.912 us/op
                 testDeserialiseProvN·p0.90:   96.128 us/op
                 testDeserialiseProvN·p0.95:   116.864 us/op
                 testDeserialiseProvN·p0.99:   165.023 us/op
                 testDeserialiseProvN·p0.999:  253.440 us/op
                 testDeserialiseProvN·p0.9999: 1071.646 us/op
                 testDeserialiseProvN·p1.00:   1159.168 us/op



Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvN":
  N = 546460
  mean =     91.418 ±(99.9%) 0.103 us/op

  Histogram, us/op:
    [   0.000,  250.000) = 545922 
    [ 250.000,  500.000) = 350 
    [ 500.000,  750.000) = 5 
    [ 750.000, 1000.000) = 83 
    [1000.000, 1250.000) = 98 
    [1250.000, 1500.000) = 0 
    [1500.000, 1750.000) = 0 
    [1750.000, 2000.000) = 0 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 1 
    [2500.000, 2750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     83.328 us/op
     p(50.0000) =     86.912 us/op
     p(90.0000) =     96.000 us/op
     p(95.0000) =    116.096 us/op
     p(99.0000) =    166.912 us/op
     p(99.9000) =    249.226 us/op
     p(99.9900) =   1057.493 us/op
     p(99.9990) =   1185.937 us/op
     p(99.9999) =   2555.904 us/op
    p(100.0000) =   2555.904 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testReadScala

# Run progress: 86.66% complete, ETA 00:05:24
# Fork: 1 of 1
# Warmup Iteration   1: 2853.770 ±(99.9%) 139.835 us/op
# Warmup Iteration   2: 2709.993 ±(99.9%) 13.191 us/op
# Warmup Iteration   3: 2707.048 ±(99.9%) 14.247 us/op
Iteration   1: 2685.054 ±(99.9%) 12.525 us/op
                 testReadScala·p0.00:   2502.656 us/op
                 testReadScala·p0.50:   2600.960 us/op
                 testReadScala·p0.90:   2871.296 us/op
                 testReadScala·p0.95:   3014.656 us/op
                 testReadScala·p0.99:   3884.974 us/op
                 testReadScala·p0.999:  4536.238 us/op
                 testReadScala·p0.9999: 4882.432 us/op
                 testReadScala·p1.00:   4882.432 us/op

Iteration   2: 2682.356 ±(99.9%) 12.802 us/op
                 testReadScala·p0.00:   2502.656 us/op
                 testReadScala·p0.50:   2596.864 us/op
                 testReadScala·p0.90:   2871.296 us/op
                 testReadScala·p0.95:   2996.429 us/op
                 testReadScala·p0.99:   3955.548 us/op
                 testReadScala·p0.999:  4294.828 us/op
                 testReadScala·p0.9999: 4579.328 us/op
                 testReadScala·p1.00:   4579.328 us/op

Iteration   3: 2700.515 ±(99.9%) 13.748 us/op
                 testReadScala·p0.00:   2498.560 us/op
                 testReadScala·p0.50:   2613.248 us/op
                 testReadScala·p0.90:   2904.064 us/op
                 testReadScala·p0.95:   3063.398 us/op
                 testReadScala·p0.99:   4005.806 us/op
                 testReadScala·p0.999:  4788.142 us/op
                 testReadScala·p0.9999: 4866.048 us/op
                 testReadScala·p1.00:   4866.048 us/op

Iteration   4: 2685.686 ±(99.9%) 12.914 us/op
                 testReadScala·p0.00:   2502.656 us/op
                 testReadScala·p0.50:   2600.960 us/op
                 testReadScala·p0.90:   2883.584 us/op
                 testReadScala·p0.95:   3018.752 us/op
                 testReadScala·p0.99:   3971.564 us/op
                 testReadScala·p0.999:  4646.633 us/op
                 testReadScala·p0.9999: 4825.088 us/op
                 testReadScala·p1.00:   4825.088 us/op

Iteration   5: 2678.710 ±(99.9%) 12.246 us/op
                 testReadScala·p0.00:   2502.656 us/op
                 testReadScala·p0.50:   2596.864 us/op
                 testReadScala·p0.90:   2878.259 us/op
                 testReadScala·p0.95:   3014.656 us/op
                 testReadScala·p0.99:   3828.490 us/op
                 testReadScala·p0.999:  4375.642 us/op
                 testReadScala·p0.9999: 5816.320 us/op
                 testReadScala·p1.00:   5816.320 us/op



Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testReadScala":
  N = 18608
  mean =   2686.443 ±(99.9%) 5.747 us/op

  Histogram, us/op:
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 1 
    [2500.000, 2750.000) = 14616 
    [2750.000, 3000.000) = 2983 
    [3000.000, 3250.000) = 445 
    [3250.000, 3500.000) = 147 
    [3500.000, 3750.000) = 127 
    [3750.000, 4000.000) = 134 
    [4000.000, 4250.000) = 109 
    [4250.000, 4500.000) = 30 
    [4500.000, 4750.000) = 9 
    [4750.000, 5000.000) = 6 
    [5000.000, 5250.000) = 0 
    [5250.000, 5500.000) = 0 
    [5500.000, 5750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2498.560 us/op
     p(50.0000) =   2600.960 us/op
     p(90.0000) =   2879.488 us/op
     p(95.0000) =   3018.752 us/op
     p(99.0000) =   3939.983 us/op
     p(99.9000) =   4413.702 us/op
     p(99.9900) =   5012.336 us/op
     p(99.9990) =   5816.320 us/op
     p(99.9999) =   5816.320 us/op
    p(100.0000) =   5816.320 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialisePJson

# Run progress: 90.00% complete, ETA 00:04:03
# Fork: 1 of 1
# Warmup Iteration   1: 38.948 ±(99.9%) 2.016 us/op
# Warmup Iteration   2: 35.849 ±(99.9%) 0.138 us/op
# Warmup Iteration   3: 35.773 ±(99.9%) 0.139 us/op
Iteration   1: 35.902 ±(99.9%) 0.130 us/op
                 testSerialisePJson·p0.00:   32.832 us/op
                 testSerialisePJson·p0.50:   34.112 us/op
                 testSerialisePJson·p0.90:   37.312 us/op
                 testSerialisePJson·p0.95:   42.560 us/op
                 testSerialisePJson·p0.99:   71.424 us/op
                 testSerialisePJson·p0.999:  119.568 us/op
                 testSerialisePJson·p0.9999: 919.915 us/op
                 testSerialisePJson·p1.00:   1058.816 us/op

Iteration   2: 35.960 ±(99.9%) 0.132 us/op
                 testSerialisePJson·p0.00:   32.832 us/op
                 testSerialisePJson·p0.50:   34.112 us/op
                 testSerialisePJson·p0.90:   37.248 us/op
                 testSerialisePJson·p0.95:   45.184 us/op
                 testSerialisePJson·p0.99:   71.837 us/op
                 testSerialisePJson·p0.999:  121.612 us/op
                 testSerialisePJson·p0.9999: 911.989 us/op
                 testSerialisePJson·p1.00:   1122.304 us/op

Iteration   3: 35.958 ±(99.9%) 0.137 us/op
                 testSerialisePJson·p0.00:   32.832 us/op
                 testSerialisePJson·p0.50:   34.176 us/op
                 testSerialisePJson·p0.90:   36.672 us/op
                 testSerialisePJson·p0.95:   42.048 us/op
                 testSerialisePJson·p0.99:   72.192 us/op
                 testSerialisePJson·p0.999:  124.141 us/op
                 testSerialisePJson·p0.9999: 974.109 us/op
                 testSerialisePJson·p1.00:   1144.832 us/op

Iteration   4: 36.022 ±(99.9%) 0.130 us/op
                 testSerialisePJson·p0.00:   32.832 us/op
                 testSerialisePJson·p0.50:   34.176 us/op
                 testSerialisePJson·p0.90:   37.248 us/op
                 testSerialisePJson·p0.95:   48.000 us/op
                 testSerialisePJson·p0.99:   71.680 us/op
                 testSerialisePJson·p0.999:  120.869 us/op
                 testSerialisePJson·p0.9999: 886.916 us/op
                 testSerialisePJson·p1.00:   1050.624 us/op

Iteration   5: 35.851 ±(99.9%) 0.128 us/op
                 testSerialisePJson·p0.00:   32.768 us/op
                 testSerialisePJson·p0.50:   34.112 us/op
                 testSerialisePJson·p0.90:   36.800 us/op
                 testSerialisePJson·p0.95:   41.216 us/op
                 testSerialisePJson·p0.99:   71.424 us/op
                 testSerialisePJson·p0.999:  118.298 us/op
                 testSerialisePJson·p0.9999: 898.376 us/op
                 testSerialisePJson·p1.00:   1021.952 us/op



Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialisePJson":
  N = 695409
  mean =     35.938 ±(99.9%) 0.059 us/op

  Histogram, us/op:
    [   0.000,  125.000) = 694795 
    [ 125.000,  250.000) = 448 
    [ 250.000,  375.000) = 10 
    [ 375.000,  500.000) = 2 
    [ 500.000,  625.000) = 0 
    [ 625.000,  750.000) = 3 
    [ 750.000,  875.000) = 61 
    [ 875.000, 1000.000) = 65 
    [1000.000, 1125.000) = 24 
    [1125.000, 1250.000) = 1 
    [1250.000, 1375.000) = 0 
    [1375.000, 1500.000) = 0 
    [1500.000, 1625.000) = 0 
    [1625.000, 1750.000) = 0 
    [1750.000, 1875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =     32.768 us/op
     p(50.0000) =     34.176 us/op
     p(90.0000) =     37.184 us/op
     p(95.0000) =     43.904 us/op
     p(99.0000) =     71.680 us/op
     p(99.9000) =    120.908 us/op
     p(99.9900) =    914.348 us/op
     p(99.9990) =   1063.100 us/op
     p(99.9999) =   1144.832 us/op
    p(100.0000) =   1144.832 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvJsonLD

# Run progress: 93.33% complete, ETA 00:02:42
# Fork: 1 of 1
# Warmup Iteration   1: 59.537 ±(99.9%) 1.476 us/op
# Warmup Iteration   2: 52.967 ±(99.9%) 0.114 us/op
# Warmup Iteration   3: 52.596 ±(99.9%) 0.103 us/op
Iteration   1: 52.607 ±(99.9%) 0.111 us/op
                 testSerialiseProvJsonLD·p0.00:   48.512 us/op
                 testSerialiseProvJsonLD·p0.50:   50.304 us/op
                 testSerialiseProvJsonLD·p0.90:   54.656 us/op
                 testSerialiseProvJsonLD·p0.95:   64.640 us/op
                 testSerialiseProvJsonLD·p0.99:   101.376 us/op
                 testSerialiseProvJsonLD·p0.999:  146.724 us/op
                 testSerialiseProvJsonLD·p0.9999: 876.672 us/op
                 testSerialiseProvJsonLD·p1.00:   2347.008 us/op

Iteration   2: 53.818 ±(99.9%) 0.113 us/op
                 testSerialiseProvJsonLD·p0.00:   48.576 us/op
                 testSerialiseProvJsonLD·p0.50:   51.136 us/op
                 testSerialiseProvJsonLD·p0.90:   55.424 us/op
                 testSerialiseProvJsonLD·p0.95:   66.688 us/op
                 testSerialiseProvJsonLD·p0.99:   100.736 us/op
                 testSerialiseProvJsonLD·p0.999:  141.957 us/op
                 testSerialiseProvJsonLD·p0.9999: 867.791 us/op
                 testSerialiseProvJsonLD·p1.00:   2506.752 us/op

Iteration   3: 52.666 ±(99.9%) 0.109 us/op
                 testSerialiseProvJsonLD·p0.00:   48.512 us/op
                 testSerialiseProvJsonLD·p0.50:   50.304 us/op
                 testSerialiseProvJsonLD·p0.90:   53.952 us/op
                 testSerialiseProvJsonLD·p0.95:   64.512 us/op
                 testSerialiseProvJsonLD·p0.99:   101.760 us/op
                 testSerialiseProvJsonLD·p0.999:  150.784 us/op
                 testSerialiseProvJsonLD·p0.9999: 902.633 us/op
                 testSerialiseProvJsonLD·p1.00:   1234.944 us/op

Iteration   4: 52.560 ±(99.9%) 0.114 us/op
                 testSerialiseProvJsonLD·p0.00:   48.512 us/op
                 testSerialiseProvJsonLD·p0.50:   50.304 us/op
                 testSerialiseProvJsonLD·p0.90:   53.440 us/op
                 testSerialiseProvJsonLD·p0.95:   64.448 us/op
                 testSerialiseProvJsonLD·p0.99:   100.736 us/op
                 testSerialiseProvJsonLD·p0.999:  148.992 us/op
                 testSerialiseProvJsonLD·p0.9999: 881.835 us/op
                 testSerialiseProvJsonLD·p1.00:   2613.248 us/op

Iteration   5: 52.848 ±(99.9%) 0.108 us/op
                 testSerialiseProvJsonLD·p0.00:   48.448 us/op
                 testSerialiseProvJsonLD·p0.50:   50.304 us/op
                 testSerialiseProvJsonLD·p0.90:   54.784 us/op
                 testSerialiseProvJsonLD·p0.95:   66.349 us/op
                 testSerialiseProvJsonLD·p0.99:   103.168 us/op
                 testSerialiseProvJsonLD·p0.999:  150.272 us/op
                 testSerialiseProvJsonLD·p0.9999: 856.161 us/op
                 testSerialiseProvJsonLD·p1.00:   1071.104 us/op



Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvJsonLD":
  N = 943926
  mean =     52.896 ±(99.9%) 0.050 us/op

  Histogram, us/op:
    [   0.000,  250.000) = 943771 
    [ 250.000,  500.000) = 20 
    [ 500.000,  750.000) = 0 
    [ 750.000, 1000.000) = 105 
    [1000.000, 1250.000) = 27 
    [1250.000, 1500.000) = 0 
    [1500.000, 1750.000) = 0 
    [1750.000, 2000.000) = 0 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 1 
    [2500.000, 2750.000) = 2 

  Percentiles, us/op:
      p(0.0000) =     48.448 us/op
     p(50.0000) =     50.368 us/op
     p(90.0000) =     54.912 us/op
     p(95.0000) =     64.960 us/op
     p(99.0000) =    101.632 us/op
     p(99.9000) =    147.456 us/op
     p(99.9900) =    876.142 us/op
     p(99.9990) =   1083.641 us/op
     p(99.9999) =   2613.248 us/op
    p(100.0000) =   2613.248 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvN

# Run progress: 96.66% complete, ETA 00:01:21
# Fork: 1 of 1
# Warmup Iteration   1: 17.114 ±(99.9%) 1.728 us/op
# Warmup Iteration   2: 14.649 ±(99.9%) 0.101 us/op
# Warmup Iteration   3: 14.709 ±(99.9%) 0.121 us/op
Iteration   1: 14.777 ±(99.9%) 0.117 us/op
                 testSerialiseProvN·p0.00:   13.136 us/op
                 testSerialiseProvN·p0.50:   13.840 us/op
                 testSerialiseProvN·p0.90:   15.040 us/op
                 testSerialiseProvN·p0.95:   16.128 us/op
                 testSerialiseProvN·p0.99:   33.472 us/op
                 testSerialiseProvN·p0.999:  67.772 us/op
                 testSerialiseProvN·p0.9999: 991.928 us/op
                 testSerialiseProvN·p1.00:   2330.624 us/op

Iteration   2: 14.694 ±(99.9%) 0.103 us/op
                 testSerialiseProvN·p0.00:   13.136 us/op
                 testSerialiseProvN·p0.50:   13.840 us/op
                 testSerialiseProvN·p0.90:   14.832 us/op
                 testSerialiseProvN·p0.95:   15.936 us/op
                 testSerialiseProvN·p0.99:   33.152 us/op
                 testSerialiseProvN·p0.999:  64.326 us/op
                 testSerialiseProvN·p0.9999: 951.950 us/op
                 testSerialiseProvN·p1.00:   2314.240 us/op

Iteration   3: 14.657 ±(99.9%) 0.102 us/op
                 testSerialiseProvN·p0.00:   13.120 us/op
                 testSerialiseProvN·p0.50:   13.808 us/op
                 testSerialiseProvN·p0.90:   14.880 us/op
                 testSerialiseProvN·p0.95:   15.952 us/op
                 testSerialiseProvN·p0.99:   32.896 us/op
                 testSerialiseProvN·p0.999:  65.418 us/op
                 testSerialiseProvN·p0.9999: 994.247 us/op
                 testSerialiseProvN·p1.00:   1114.112 us/op

Iteration   4: 14.667 ±(99.9%) 0.132 us/op
                 testSerialiseProvN·p0.00:   13.152 us/op
                 testSerialiseProvN·p0.50:   13.808 us/op
                 testSerialiseProvN·p0.90:   14.720 us/op
                 testSerialiseProvN·p0.95:   15.888 us/op
                 testSerialiseProvN·p0.99:   32.960 us/op
                 testSerialiseProvN·p0.999:  67.490 us/op
                 testSerialiseProvN·p0.9999: 983.045 us/op
                 testSerialiseProvN·p1.00:   2392.064 us/op

Iteration   5: 14.684 ±(99.9%) 0.147 us/op
                 testSerialiseProvN·p0.00:   13.152 us/op
                 testSerialiseProvN·p0.50:   13.808 us/op
                 testSerialiseProvN·p0.90:   14.832 us/op
                 testSerialiseProvN·p0.95:   15.856 us/op
                 testSerialiseProvN·p0.99:   32.960 us/op
                 testSerialiseProvN·p0.999:  62.329 us/op
                 testSerialiseProvN·p0.9999: 984.041 us/op
                 testSerialiseProvN·p1.00:   2670.592 us/op



Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvN":
  N = 856319
  mean =     14.696 ±(99.9%) 0.054 us/op

  Histogram, us/op:
    [   0.000,  250.000) = 856197 
    [ 250.000,  500.000) = 0 
    [ 500.000,  750.000) = 0 
    [ 750.000, 1000.000) = 49 
    [1000.000, 1250.000) = 57 
    [1250.000, 1500.000) = 1 
    [1500.000, 1750.000) = 0 
    [1750.000, 2000.000) = 2 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 12 
    [2500.000, 2750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =     13.120 us/op
     p(50.0000) =     13.824 us/op
     p(90.0000) =     14.880 us/op
     p(95.0000) =     15.968 us/op
     p(99.0000) =     33.024 us/op
     p(99.9000) =     65.623 us/op
     p(99.9900) =    979.321 us/op
     p(99.9990) =   2368.759 us/op
     p(99.9999) =   2670.592 us/op
    p(100.0000) =   2670.592 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyJava

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 1326.648 us/op
# Warmup Iteration   2: 510.939 us/op
# Warmup Iteration   3: 422.407 us/op
Iteration   1: 379.883 us/op
Iteration   2: 325.870 us/op
Iteration   3: 329.643 us/op
Iteration   4: 222.000 us/op
Iteration   5: 218.610 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyJava":
  N = 5
  mean =    295.201 ±(99.9%) 275.815 us/op

  Histogram, us/op:
    [200.000, 212.500) = 0 
    [212.500, 225.000) = 2 
    [225.000, 237.500) = 0 
    [237.500, 250.000) = 0 
    [250.000, 262.500) = 0 
    [262.500, 275.000) = 0 
    [275.000, 287.500) = 0 
    [287.500, 300.000) = 0 
    [300.000, 312.500) = 0 
    [312.500, 325.000) = 0 
    [325.000, 337.500) = 2 
    [337.500, 350.000) = 0 
    [350.000, 362.500) = 0 
    [362.500, 375.000) = 0 
    [375.000, 387.500) = 1 

  Percentiles, us/op:
      p(0.0000) =    218.610 us/op
     p(50.0000) =    325.870 us/op
     p(90.0000) =    379.883 us/op
     p(95.0000) =    379.883 us/op
     p(99.0000) =    379.883 us/op
     p(99.9000) =    379.883 us/op
     p(99.9900) =    379.883 us/op
     p(99.9990) =    379.883 us/op
     p(99.9999) =    379.883 us/op
    p(100.0000) =    379.883 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyScala

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 70906.274 us/op
# Warmup Iteration   2: 3890.141 us/op
# Warmup Iteration   3: 3049.827 us/op
Iteration   1: 2614.933 us/op
Iteration   2: 2568.594 us/op
Iteration   3: 1974.890 us/op
Iteration   4: 1916.398 us/op
Iteration   5: 2252.872 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeepCopyScala":
  N = 5
  mean =   2265.537 ±(99.9%) 1248.427 us/op

  Histogram, us/op:
    [1900.000, 1950.000) = 1 
    [1950.000, 2000.000) = 1 
    [2000.000, 2050.000) = 0 
    [2050.000, 2100.000) = 0 
    [2100.000, 2150.000) = 0 
    [2150.000, 2200.000) = 0 
    [2200.000, 2250.000) = 0 
    [2250.000, 2300.000) = 1 
    [2300.000, 2350.000) = 0 
    [2350.000, 2400.000) = 0 
    [2400.000, 2450.000) = 0 
    [2450.000, 2500.000) = 0 
    [2500.000, 2550.000) = 0 
    [2550.000, 2600.000) = 1 
    [2600.000, 2650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1916.398 us/op
     p(50.0000) =   2252.872 us/op
     p(90.0000) =   2614.933 us/op
     p(95.0000) =   2614.933 us/op
     p(99.0000) =   2614.933 us/op
     p(99.9000) =   2614.933 us/op
     p(99.9900) =   2614.933 us/op
     p(99.9990) =   2614.933 us/op
     p(99.9999) =   2614.933 us/op
    p(100.0000) =   2614.933 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseJson

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 1894.548 us/op
# Warmup Iteration   2: 704.710 us/op
# Warmup Iteration   3: 464.562 us/op
Iteration   1: 538.942 us/op
Iteration   2: 391.265 us/op
Iteration   3: 329.847 us/op
Iteration   4: 323.625 us/op
Iteration   5: 253.431 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseJson":
  N = 5
  mean =    367.422 ±(99.9%) 414.332 us/op

  Histogram, us/op:
    [200.000, 225.000) = 0 
    [225.000, 250.000) = 0 
    [250.000, 275.000) = 1 
    [275.000, 300.000) = 0 
    [300.000, 325.000) = 1 
    [325.000, 350.000) = 1 
    [350.000, 375.000) = 0 
    [375.000, 400.000) = 1 
    [400.000, 425.000) = 0 
    [425.000, 450.000) = 0 
    [450.000, 475.000) = 0 
    [475.000, 500.000) = 0 
    [500.000, 525.000) = 0 
    [525.000, 550.000) = 1 
    [550.000, 575.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    253.431 us/op
     p(50.0000) =    329.847 us/op
     p(90.0000) =    538.942 us/op
     p(95.0000) =    538.942 us/op
     p(99.0000) =    538.942 us/op
     p(99.9000) =    538.942 us/op
     p(99.9900) =    538.942 us/op
     p(99.9990) =    538.942 us/op
     p(99.9999) =    538.942 us/op
    p(100.0000) =    538.942 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialisePJson

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 83193.868 us/op
# Warmup Iteration   2: 2439.882 us/op
# Warmup Iteration   3: 2367.665 us/op
Iteration   1: 3154.160 us/op
Iteration   2: 1601.408 us/op
Iteration   3: 1746.478 us/op
Iteration   4: 1330.158 us/op
Iteration   5: 2659.644 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialisePJson":
  N = 5
  mean =   2098.370 ±(99.9%) 2976.893 us/op

  Histogram, us/op:
    [1000.000, 1250.000) = 0 
    [1250.000, 1500.000) = 1 
    [1500.000, 1750.000) = 2 
    [1750.000, 2000.000) = 0 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 0 
    [2500.000, 2750.000) = 1 
    [2750.000, 3000.000) = 0 
    [3000.000, 3250.000) = 1 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   1330.158 us/op
     p(50.0000) =   1746.478 us/op
     p(90.0000) =   3154.160 us/op
     p(95.0000) =   3154.160 us/op
     p(99.0000) =   3154.160 us/op
     p(99.9000) =   3154.160 us/op
     p(99.9900) =   3154.160 us/op
     p(99.9990) =   3154.160 us/op
     p(99.9999) =   3154.160 us/op
    p(100.0000) =   3154.160 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvJsonLD

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 62638.572 us/op
# Warmup Iteration   2: 3354.273 us/op
# Warmup Iteration   3: 2729.087 us/op
Iteration   1: 3355.656 us/op
Iteration   2: 1544.391 us/op
Iteration   3: 1192.151 us/op
Iteration   4: 969.567 us/op
Iteration   5: 2537.390 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvJsonLD":
  N = 5
  mean =   1919.831 ±(99.9%) 3858.553 us/op

  Histogram, us/op:
    [   0.000,  250.000) = 0 
    [ 250.000,  500.000) = 0 
    [ 500.000,  750.000) = 0 
    [ 750.000, 1000.000) = 1 
    [1000.000, 1250.000) = 1 
    [1250.000, 1500.000) = 0 
    [1500.000, 1750.000) = 1 
    [1750.000, 2000.000) = 0 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 0 
    [2500.000, 2750.000) = 1 
    [2750.000, 3000.000) = 0 
    [3000.000, 3250.000) = 0 
    [3250.000, 3500.000) = 1 
    [3500.000, 3750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =    969.567 us/op
     p(50.0000) =   1544.391 us/op
     p(90.0000) =   3355.656 us/op
     p(95.0000) =   3355.656 us/op
     p(99.0000) =   3355.656 us/op
     p(99.9000) =   3355.656 us/op
     p(99.9900) =   3355.656 us/op
     p(99.9990) =   3355.656 us/op
     p(99.9999) =   3355.656 us/op
    p(100.0000) =   3355.656 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvN

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 3544.012 us/op
# Warmup Iteration   2: 4072.071 us/op
# Warmup Iteration   3: 2701.990 us/op
Iteration   1: 2031.838 us/op
Iteration   2: 2960.346 us/op
Iteration   3: 4843.286 us/op
Iteration   4: 2835.974 us/op
Iteration   5: 2936.912 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testDeserialiseProvN":
  N = 5
  mean =   3121.671 ±(99.9%) 3989.404 us/op

  Histogram, us/op:
    [2000.000, 2250.000) = 1 
    [2250.000, 2500.000) = 0 
    [2500.000, 2750.000) = 0 
    [2750.000, 3000.000) = 3 
    [3000.000, 3250.000) = 0 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 0 
    [3750.000, 4000.000) = 0 
    [4000.000, 4250.000) = 0 
    [4250.000, 4500.000) = 0 
    [4500.000, 4750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2031.838 us/op
     p(50.0000) =   2936.912 us/op
     p(90.0000) =   4843.286 us/op
     p(95.0000) =   4843.286 us/op
     p(99.0000) =   4843.286 us/op
     p(99.9000) =   4843.286 us/op
     p(99.9900) =   4843.286 us/op
     p(99.9990) =   4843.286 us/op
     p(99.9999) =   4843.286 us/op
    p(100.0000) =   4843.286 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testReadScala

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 144634.485 us/op
# Warmup Iteration   2: 20066.203 us/op
# Warmup Iteration   3: 17255.879 us/op
Iteration   1: 17453.176 us/op
Iteration   2: 12913.132 us/op
Iteration   3: 9827.262 us/op
Iteration   4: 12484.691 us/op
Iteration   5: 7428.676 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testReadScala":
  N = 5
  mean =  12021.387 ±(99.9%) 14461.894 us/op

  Histogram, us/op:
    [    0.000,  1250.000) = 0 
    [ 1250.000,  2500.000) = 0 
    [ 2500.000,  3750.000) = 0 
    [ 3750.000,  5000.000) = 0 
    [ 5000.000,  6250.000) = 0 
    [ 6250.000,  7500.000) = 1 
    [ 7500.000,  8750.000) = 0 
    [ 8750.000, 10000.000) = 1 
    [10000.000, 11250.000) = 0 
    [11250.000, 12500.000) = 1 
    [12500.000, 13750.000) = 1 
    [13750.000, 15000.000) = 0 
    [15000.000, 16250.000) = 0 
    [16250.000, 17500.000) = 1 
    [17500.000, 18750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   7428.676 us/op
     p(50.0000) =  12484.691 us/op
     p(90.0000) =  17453.176 us/op
     p(95.0000) =  17453.176 us/op
     p(99.0000) =  17453.176 us/op
     p(99.9000) =  17453.176 us/op
     p(99.9900) =  17453.176 us/op
     p(99.9990) =  17453.176 us/op
     p(99.9999) =  17453.176 us/op
    p(100.0000) =  17453.176 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialisePJson

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 74342.999 us/op
# Warmup Iteration   2: 2687.423 us/op
# Warmup Iteration   3: 2655.881 us/op
Iteration   1: 4651.842 us/op
Iteration   2: 1916.043 us/op
Iteration   3: 2420.755 us/op
Iteration   4: 1873.219 us/op
Iteration   5: 3125.001 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialisePJson":
  N = 5
  mean =   2797.372 ±(99.9%) 4440.378 us/op

  Histogram, us/op:
    [1000.000, 1250.000) = 0 
    [1250.000, 1500.000) = 0 
    [1500.000, 1750.000) = 0 
    [1750.000, 2000.000) = 2 
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 1 
    [2500.000, 2750.000) = 0 
    [2750.000, 3000.000) = 0 
    [3000.000, 3250.000) = 1 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 0 
    [3750.000, 4000.000) = 0 
    [4000.000, 4250.000) = 0 
    [4250.000, 4500.000) = 0 
    [4500.000, 4750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   1873.219 us/op
     p(50.0000) =   2420.755 us/op
     p(90.0000) =   4651.842 us/op
     p(95.0000) =   4651.842 us/op
     p(99.0000) =   4651.842 us/op
     p(99.9000) =   4651.842 us/op
     p(99.9900) =   4651.842 us/op
     p(99.9990) =   4651.842 us/op
     p(99.9999) =   4651.842 us/op
    p(100.0000) =   4651.842 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvJsonLD

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 71334.037 us/op
# Warmup Iteration   2: 4622.776 us/op
# Warmup Iteration   3: 3839.197 us/op
Iteration   1: 4770.742 us/op
Iteration   2: 2220.192 us/op
Iteration   3: 2031.117 us/op
Iteration   4: 2339.230 us/op
Iteration   5: 2556.569 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvJsonLD":
  N = 5
  mean =   2783.570 ±(99.9%) 4340.053 us/op

  Histogram, us/op:
    [2000.000, 2250.000) = 2 
    [2250.000, 2500.000) = 1 
    [2500.000, 2750.000) = 1 
    [2750.000, 3000.000) = 0 
    [3000.000, 3250.000) = 0 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 0 
    [3750.000, 4000.000) = 0 
    [4000.000, 4250.000) = 0 
    [4250.000, 4500.000) = 0 
    [4500.000, 4750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2031.117 us/op
     p(50.0000) =   2339.230 us/op
     p(90.0000) =   4770.742 us/op
     p(95.0000) =   4770.742 us/op
     p(99.0000) =   4770.742 us/op
     p(99.9000) =   4770.742 us/op
     p(99.9900) =   4770.742 us/op
     p(99.9990) =   4770.742 us/op
     p(99.9999) =   4770.742 us/op
    p(100.0000) =   4770.742 us/op


# JMH version: 1.23
# VM version: JDK 12.0.1, OpenJDK 64-Bit Server VM, 12.0.1+12
# VM invoker: /usr/local/java/jdk-12.0.1.jdk/Contents/Home/bin/java
# VM options: -Xms1g -Xmx16g
# Warmup: 3 iterations, single-shot each
# Measurement: 5 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvN

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: 80061.748 us/op
# Warmup Iteration   2: 1190.488 us/op
# Warmup Iteration   3: 962.008 us/op
Iteration   1: 1039.159 us/op
Iteration   2: 783.457 us/op
Iteration   3: 685.615 us/op
Iteration   4: 634.297 us/op
Iteration   5: 858.394 us/op


Result "org.openprovenance.prov.benchmarks.SerialisationBenchmarks.testSerialiseProvN":
  N = 5
  mean =    800.184 ±(99.9%) 613.153 us/op

  Histogram, us/op:
    [ 600.000,  650.000) = 1 
    [ 650.000,  700.000) = 1 
    [ 700.000,  750.000) = 0 
    [ 750.000,  800.000) = 1 
    [ 800.000,  850.000) = 0 
    [ 850.000,  900.000) = 1 
    [ 900.000,  950.000) = 0 
    [ 950.000, 1000.000) = 0 
    [1000.000, 1050.000) = 1 

  Percentiles, us/op:
      p(0.0000) =    634.297 us/op
     p(50.0000) =    783.457 us/op
     p(90.0000) =   1039.159 us/op
     p(95.0000) =   1039.159 us/op
     p(99.0000) =   1039.159 us/op
     p(99.9000) =   1039.159 us/op
     p(99.9900) =   1039.159 us/op
     p(99.9990) =   1039.159 us/op
     p(99.9999) =   1039.159 us/op
    p(100.0000) =   1039.159 us/op


# Run complete. Total time: 00:40:40

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                              Mode      Cnt      Score       Error   Units
SerialisationBenchmarks.testDeepCopyJava                                              thrpt        5      0.159 ±     0.003  ops/us
SerialisationBenchmarks.testDeepCopyScala                                             thrpt        5      0.025 ±     0.001  ops/us
SerialisationBenchmarks.testDeserialiseJson                                           thrpt        5      0.084 ±     0.001  ops/us
SerialisationBenchmarks.testDeserialisePJson                                          thrpt        5      0.022 ±     0.001  ops/us
SerialisationBenchmarks.testDeserialiseProvJsonLD                                     thrpt        5      0.037 ±     0.001  ops/us
SerialisationBenchmarks.testDeserialiseProvN                                          thrpt        5      0.011 ±     0.001  ops/us
SerialisationBenchmarks.testReadScala                                                 thrpt        5     ≈ 10⁻³              ops/us
SerialisationBenchmarks.testSerialisePJson                                            thrpt        5      0.028 ±     0.001  ops/us
SerialisationBenchmarks.testSerialiseProvJsonLD                                       thrpt        5      0.019 ±     0.001  ops/us
SerialisationBenchmarks.testSerialiseProvN                                            thrpt        5      0.069 ±     0.001  ops/us
SerialisationBenchmarks.testDeepCopyJava                                               avgt        5      6.308 ±     0.038   us/op
SerialisationBenchmarks.testDeepCopyScala                                              avgt        5     40.853 ±     0.460   us/op
SerialisationBenchmarks.testDeserialiseJson                                            avgt        5     12.045 ±     0.058   us/op
SerialisationBenchmarks.testDeserialisePJson                                           avgt        5     45.943 ±     0.361   us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD                                      avgt        5     27.056 ±     0.904   us/op
SerialisationBenchmarks.testDeserialiseProvN                                           avgt        5     89.574 ±     0.895   us/op
SerialisationBenchmarks.testReadScala                                                  avgt        5   2672.184 ±    19.142   us/op
SerialisationBenchmarks.testSerialisePJson                                             avgt        5     36.026 ±     0.170   us/op
SerialisationBenchmarks.testSerialiseProvJsonLD                                        avgt        5     51.465 ±     0.662   us/op
SerialisationBenchmarks.testSerialiseProvN                                             avgt        5     14.339 ±     0.105   us/op
SerialisationBenchmarks.testDeepCopyJava                                             sample   969839      6.533 ±     0.033   us/op
SerialisationBenchmarks.testDeepCopyJava:testDeepCopyJava·p0.00                      sample               5.816               us/op
SerialisationBenchmarks.testDeepCopyJava:testDeepCopyJava·p0.50                      sample               6.144               us/op
SerialisationBenchmarks.testDeepCopyJava:testDeepCopyJava·p0.90                      sample               6.472               us/op
SerialisationBenchmarks.testDeepCopyJava:testDeepCopyJava·p0.95                      sample               6.768               us/op
SerialisationBenchmarks.testDeepCopyJava:testDeepCopyJava·p0.99                      sample              20.160               us/op
SerialisationBenchmarks.testDeepCopyJava:testDeepCopyJava·p0.999                     sample              32.000               us/op
SerialisationBenchmarks.testDeepCopyJava:testDeepCopyJava·p0.9999                    sample             688.194               us/op
SerialisationBenchmarks.testDeepCopyJava:testDeepCopyJava·p1.00                      sample            2400.256               us/op
SerialisationBenchmarks.testDeepCopyScala                                            sample   591651     42.248 ±     0.069   us/op
SerialisationBenchmarks.testDeepCopyScala:testDeepCopyScala·p0.00                    sample              38.976               us/op
SerialisationBenchmarks.testDeepCopyScala:testDeepCopyScala·p0.50                    sample              40.320               us/op
SerialisationBenchmarks.testDeepCopyScala:testDeepCopyScala·p0.90                    sample              42.816               us/op
SerialisationBenchmarks.testDeepCopyScala:testDeepCopyScala·p0.95                    sample              53.568               us/op
SerialisationBenchmarks.testDeepCopyScala:testDeepCopyScala·p0.99                    sample              80.512               us/op
SerialisationBenchmarks.testDeepCopyScala:testDeepCopyScala·p0.999                   sample             136.448               us/op
SerialisationBenchmarks.testDeepCopyScala:testDeepCopyScala·p0.9999                  sample             970.752               us/op
SerialisationBenchmarks.testDeepCopyScala:testDeepCopyScala·p1.00                    sample            2469.888               us/op
SerialisationBenchmarks.testDeserialiseJson                                          sample  1054127     11.886 ±     0.027   us/op
SerialisationBenchmarks.testDeserialiseJson:testDeserialiseJson·p0.00                sample              10.880               us/op
SerialisationBenchmarks.testDeserialiseJson:testDeserialiseJson·p0.50                sample              11.312               us/op
SerialisationBenchmarks.testDeserialiseJson:testDeserialiseJson·p0.90                sample              11.840               us/op
SerialisationBenchmarks.testDeserialiseJson:testDeserialiseJson·p0.95                sample              12.400               us/op
SerialisationBenchmarks.testDeserialiseJson:testDeserialiseJson·p0.99                sample              28.375               us/op
SerialisationBenchmarks.testDeserialiseJson:testDeserialiseJson·p0.999               sample              48.384               us/op
SerialisationBenchmarks.testDeserialiseJson:testDeserialiseJson·p0.9999              sample             104.576               us/op
SerialisationBenchmarks.testDeserialiseJson:testDeserialiseJson·p1.00                sample            2244.608               us/op
SerialisationBenchmarks.testDeserialisePJson                                         sample   537972     46.455 ±     0.072   us/op
SerialisationBenchmarks.testDeserialisePJson:testDeserialisePJson·p0.00              sample              42.688               us/op
SerialisationBenchmarks.testDeserialisePJson:testDeserialisePJson·p0.50              sample              44.352               us/op
SerialisationBenchmarks.testDeserialisePJson:testDeserialisePJson·p0.90              sample              47.808               us/op
SerialisationBenchmarks.testDeserialisePJson:testDeserialisePJson·p0.95              sample              58.048               us/op
SerialisationBenchmarks.testDeserialisePJson:testDeserialisePJson·p0.99              sample              89.635               us/op
SerialisationBenchmarks.testDeserialisePJson:testDeserialisePJson·p0.999             sample             154.887               us/op
SerialisationBenchmarks.testDeserialisePJson:testDeserialisePJson·p0.9999            sample             966.864               us/op
SerialisationBenchmarks.testDeserialisePJson:testDeserialisePJson·p1.00              sample            2473.984               us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD                                    sample   905743     27.585 ±     0.038   us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD:testDeserialiseProvJsonLD·p0.00    sample              25.248               us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD:testDeserialiseProvJsonLD·p0.50    sample              26.368               us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD:testDeserialiseProvJsonLD·p0.90    sample              27.744               us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD:testDeserialiseProvJsonLD·p0.95    sample              30.426               us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD:testDeserialiseProvJsonLD·p0.99    sample              56.640               us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD:testDeserialiseProvJsonLD·p0.999   sample              92.032               us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD:testDeserialiseProvJsonLD·p0.9999  sample             757.019               us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD:testDeserialiseProvJsonLD·p1.00    sample            2392.064               us/op
SerialisationBenchmarks.testDeserialiseProvN                                         sample   546460     91.418 ±     0.103   us/op
SerialisationBenchmarks.testDeserialiseProvN:testDeserialiseProvN·p0.00              sample              83.328               us/op
SerialisationBenchmarks.testDeserialiseProvN:testDeserialiseProvN·p0.50              sample              86.912               us/op
SerialisationBenchmarks.testDeserialiseProvN:testDeserialiseProvN·p0.90              sample              96.000               us/op
SerialisationBenchmarks.testDeserialiseProvN:testDeserialiseProvN·p0.95              sample             116.096               us/op
SerialisationBenchmarks.testDeserialiseProvN:testDeserialiseProvN·p0.99              sample             166.912               us/op
SerialisationBenchmarks.testDeserialiseProvN:testDeserialiseProvN·p0.999             sample             249.226               us/op
SerialisationBenchmarks.testDeserialiseProvN:testDeserialiseProvN·p0.9999            sample            1057.493               us/op
SerialisationBenchmarks.testDeserialiseProvN:testDeserialiseProvN·p1.00              sample            2555.904               us/op
SerialisationBenchmarks.testReadScala                                                sample    18608   2686.443 ±     5.747   us/op
SerialisationBenchmarks.testReadScala:testReadScala·p0.00                            sample            2498.560               us/op
SerialisationBenchmarks.testReadScala:testReadScala·p0.50                            sample            2600.960               us/op
SerialisationBenchmarks.testReadScala:testReadScala·p0.90                            sample            2879.488               us/op
SerialisationBenchmarks.testReadScala:testReadScala·p0.95                            sample            3018.752               us/op
SerialisationBenchmarks.testReadScala:testReadScala·p0.99                            sample            3939.983               us/op
SerialisationBenchmarks.testReadScala:testReadScala·p0.999                           sample            4413.702               us/op
SerialisationBenchmarks.testReadScala:testReadScala·p0.9999                          sample            5012.336               us/op
SerialisationBenchmarks.testReadScala:testReadScala·p1.00                            sample            5816.320               us/op
SerialisationBenchmarks.testSerialisePJson                                           sample   695409     35.938 ±     0.059   us/op
SerialisationBenchmarks.testSerialisePJson:testSerialisePJson·p0.00                  sample              32.768               us/op
SerialisationBenchmarks.testSerialisePJson:testSerialisePJson·p0.50                  sample              34.176               us/op
SerialisationBenchmarks.testSerialisePJson:testSerialisePJson·p0.90                  sample              37.184               us/op
SerialisationBenchmarks.testSerialisePJson:testSerialisePJson·p0.95                  sample              43.904               us/op
SerialisationBenchmarks.testSerialisePJson:testSerialisePJson·p0.99                  sample              71.680               us/op
SerialisationBenchmarks.testSerialisePJson:testSerialisePJson·p0.999                 sample             120.908               us/op
SerialisationBenchmarks.testSerialisePJson:testSerialisePJson·p0.9999                sample             914.348               us/op
SerialisationBenchmarks.testSerialisePJson:testSerialisePJson·p1.00                  sample            1144.832               us/op
SerialisationBenchmarks.testSerialiseProvJsonLD                                      sample   943926     52.896 ±     0.050   us/op
SerialisationBenchmarks.testSerialiseProvJsonLD:testSerialiseProvJsonLD·p0.00        sample              48.448               us/op
SerialisationBenchmarks.testSerialiseProvJsonLD:testSerialiseProvJsonLD·p0.50        sample              50.368               us/op
SerialisationBenchmarks.testSerialiseProvJsonLD:testSerialiseProvJsonLD·p0.90        sample              54.912               us/op
SerialisationBenchmarks.testSerialiseProvJsonLD:testSerialiseProvJsonLD·p0.95        sample              64.960               us/op
SerialisationBenchmarks.testSerialiseProvJsonLD:testSerialiseProvJsonLD·p0.99        sample             101.632               us/op
SerialisationBenchmarks.testSerialiseProvJsonLD:testSerialiseProvJsonLD·p0.999       sample             147.456               us/op
SerialisationBenchmarks.testSerialiseProvJsonLD:testSerialiseProvJsonLD·p0.9999      sample             876.142               us/op
SerialisationBenchmarks.testSerialiseProvJsonLD:testSerialiseProvJsonLD·p1.00        sample            2613.248               us/op
SerialisationBenchmarks.testSerialiseProvN                                           sample   856319     14.696 ±     0.054   us/op
SerialisationBenchmarks.testSerialiseProvN:testSerialiseProvN·p0.00                  sample              13.120               us/op
SerialisationBenchmarks.testSerialiseProvN:testSerialiseProvN·p0.50                  sample              13.824               us/op
SerialisationBenchmarks.testSerialiseProvN:testSerialiseProvN·p0.90                  sample              14.880               us/op
SerialisationBenchmarks.testSerialiseProvN:testSerialiseProvN·p0.95                  sample              15.968               us/op
SerialisationBenchmarks.testSerialiseProvN:testSerialiseProvN·p0.99                  sample              33.024               us/op
SerialisationBenchmarks.testSerialiseProvN:testSerialiseProvN·p0.999                 sample              65.623               us/op
SerialisationBenchmarks.testSerialiseProvN:testSerialiseProvN·p0.9999                sample             979.321               us/op
SerialisationBenchmarks.testSerialiseProvN:testSerialiseProvN·p1.00                  sample            2670.592               us/op
SerialisationBenchmarks.testDeepCopyJava                                                 ss        5    295.201 ±   275.815   us/op
SerialisationBenchmarks.testDeepCopyScala                                                ss        5   2265.537 ±  1248.427   us/op
SerialisationBenchmarks.testDeserialiseJson                                              ss        5    367.422 ±   414.332   us/op
SerialisationBenchmarks.testDeserialisePJson                                             ss        5   2098.370 ±  2976.893   us/op
SerialisationBenchmarks.testDeserialiseProvJsonLD                                        ss        5   1919.831 ±  3858.553   us/op
SerialisationBenchmarks.testDeserialiseProvN                                             ss        5   3121.671 ±  3989.404   us/op
SerialisationBenchmarks.testReadScala                                                    ss        5  12021.387 ± 14461.894   us/op
SerialisationBenchmarks.testSerialisePJson                                               ss        5   2797.372 ±  4440.378   us/op
SerialisationBenchmarks.testSerialiseProvJsonLD                                          ss        5   2783.570 ±  4340.053   us/op
SerialisationBenchmarks.testSerialiseProvN                                               ss        5    800.184 ±   613.153   us/op

Benchmark result is saved to target/bench-2020-02-23-20-23.csv
