// Generated automatically by ProvToolbox for template configuration 'template_library'
// by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker,
// in file CompilerQueryInvoker.java, at line 29
package org.openprovenance.prov.service.commonbean.composite;
import org.openprovenance.prov.template.library.plead.client.integrator.*;

import java.lang.String;
import java.lang.StringBuilder;

public class QueryInvoker2Composite implements InputProcessor {
    final StringBuilder sb;

    public QueryInvoker2Composite(StringBuilder sb) {
        this.sb = sb;
    }

    public final Plead_transformingInputs process(Plead_transformingInputs bean) {
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker
        // in file CompilerQueryInvoker.java, at line 63
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method simpleQueryInvoker
        // in file CompilerQueryInvoker.java, at line 173
        sb.append("select * from ");
        sb.append("insert_plead_transforming (");
        sb.append(convertToNonNullableTEXT(bean.filename));
        sb.append(",");
        sb.append(bean.file);
        sb.append(",");
        sb.append(bean.method);
        sb.append(",");
        sb.append(bean.organization);
        sb.append(",");
        sb.append(bean.engineer);
        sb.append(",");
        sb.append(bean.n_rows);
        sb.append(",");
        sb.append(bean.n_cols);
        sb.append(",");
        sb.append(convertToNullableTEXT(bean.path));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.time));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.start));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.end));
        sb.append(");");
        return bean;
    }

    public final Plead_filteringInputs process(Plead_filteringInputs bean) {
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker
        // in file CompilerQueryInvoker.java, at line 63
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method simpleQueryInvoker
        // in file CompilerQueryInvoker.java, at line 173
        sb.append("select * from ");
        sb.append("insert_plead_filtering (");
        sb.append(convertToNonNullableTEXT(bean.filename));
        sb.append(",");
        sb.append(bean.file);
        sb.append(",");
        sb.append(bean.method);
        sb.append(",");
        sb.append(bean.organization);
        sb.append(",");
        sb.append(bean.engineer);
        sb.append(",");
        sb.append(bean.n_rows);
        sb.append(",");
        sb.append(bean.n_cols);
        sb.append(",");
        sb.append(convertToNullableTEXT(bean.path));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.time));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.start));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.end));
        sb.append(");");
        return bean;
    }

    public final Plead_trainingInputs process(Plead_trainingInputs bean) {
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker
        // in file CompilerQueryInvoker.java, at line 63
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method simpleQueryInvoker
        // in file CompilerQueryInvoker.java, at line 173
        sb.append("select * from ");
        sb.append("insert_plead_training (");
        sb.append(convertToNonNullableTEXT(bean.filename));
        sb.append(",");
        sb.append(bean.training_dataset);
        sb.append(",");
        sb.append(bean.organization);
        sb.append(",");
        sb.append(bean.engineer);
        sb.append(",");
        sb.append(convertToNullableTEXT(bean.path));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.time));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.start));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.end));
        sb.append(");");
        return bean;
    }

    public final Plead_validatingInputs process(Plead_validatingInputs bean) {
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker
        // in file CompilerQueryInvoker.java, at line 63
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method simpleQueryInvoker
        // in file CompilerQueryInvoker.java, at line 173
        sb.append("select * from ");
        sb.append("insert_plead_validating (");
        sb.append(bean.testing_dataset);
        sb.append(",");
        sb.append(bean.organization);
        sb.append(",");
        sb.append(bean.engineer);
        sb.append(",");
        sb.append(convertToNullableTEXT(bean.path));
        sb.append(",");
        sb.append(bean.score_value);
        sb.append(",");
        sb.append(convertToTimestamptz(bean.time));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.start));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.end));
        sb.append(");");
        return bean;
    }

    public final Plead_approvingInputs process(Plead_approvingInputs bean) {
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker
        // in file CompilerQueryInvoker.java, at line 63
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method simpleQueryInvoker
        // in file CompilerQueryInvoker.java, at line 173
        sb.append("select * from ");
        sb.append("insert_plead_approving (");
        sb.append(convertToNonNullableTEXT(bean.filename));
        sb.append(",");
        sb.append(bean.pipeline);
        sb.append(",");
        sb.append(bean.score);
        sb.append(",");
        sb.append(bean.organization);
        sb.append(",");
        sb.append(bean.manager);
        sb.append(",");
        sb.append(convertToNullableTEXT(bean.signature));
        sb.append(",");
        sb.append(convertToNullableTEXT(bean.path));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.time));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.start));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.end));
        sb.append(");");
        return bean;
    }

    public final Plead_splittingInputs process(Plead_splittingInputs bean) {
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker
        // in file CompilerQueryInvoker.java, at line 63
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method simpleQueryInvoker
        // in file CompilerQueryInvoker.java, at line 173
        sb.append("select * from ");
        sb.append("insert_plead_splitting (");
        sb.append(convertToNonNullableTEXT(bean.filename1));
        sb.append(",");
        sb.append(convertToNonNullableTEXT(bean.filename2));
        sb.append(",");
        sb.append(bean.file);
        sb.append(",");
        sb.append(bean.organization);
        sb.append(",");
        sb.append(bean.engineer);
        sb.append(",");
        sb.append(bean.n_rows1);
        sb.append(",");
        sb.append(bean.n_cols1);
        sb.append(",");
        sb.append(convertToNullableTEXT(bean.path1));
        sb.append(",");
        sb.append(bean.n_rows2);
        sb.append(",");
        sb.append(bean.n_cols2);
        sb.append(",");
        sb.append(convertToNullableTEXT(bean.path2));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.time));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.start));
        sb.append(",");
        sb.append(convertToTimestamptz(bean.end));
        sb.append(");");
        return bean;
    }

    public final Plead_transforming_compositeInputs process(Plead_transforming_compositeInputs bean) {
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker
        // in file CompilerQueryInvoker.java, at line 63
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method compositeQueryInvoker
        // in file CompilerQueryInvoker.java, at line 258
        sb.append("---- query invoker for  plead_transforming_composite\n"
                + "\n");
        sb.append("select * from ");
        sb.append("insert_plead_transforming_composite_and_linker (");
        sb.append("ARRAY[\n");
        boolean first=true;
        for (Plead_transformingInputs_1 bean_1: bean.__elements) {
            if (first) {
                first=false;
            } else {
                sb.append(",\n"
                        + "     ");
            }
            // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method simpleQueryInvokerEmbedded
            // in file CompilerQueryInvoker.java, at line 210
            sb.append("( ");
            sb.append(bean_1.transformed_file) /* sharing */;
            sb.append(",");
            sb.append(convertToNonNullableTEXT(bean_1.filename)) ;
            sb.append(",");
            sb.append(bean_1.file) ;
            sb.append(",");
            sb.append(bean_1.method) ;
            sb.append(",");
            sb.append(bean_1.organization) ;
            sb.append(",");
            sb.append(bean_1.engineer) ;
            sb.append(",");
            sb.append(bean_1.transforming) /* sharing */;
            sb.append(",");
            sb.append(bean_1.n_rows) ;
            sb.append(",");
            sb.append(bean_1.n_cols) ;
            sb.append(",");
            sb.append(convertToNullableTEXT(bean_1.path)) ;
            sb.append(",");
            sb.append(convertToTimestamptz(bean_1.time)) ;
            sb.append(",");
            sb.append(convertToTimestamptz(bean_1.start)) ;
            sb.append(",");
            sb.append(convertToTimestamptz(bean_1.end)) ;
            sb.append(") :: plead_transforming_type");
        }
        sb.append("]);\n");
        return bean;
    }

    final String convertToTimestamptz(String time) {
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker
        // in file CompilerQueryInvoker.java, at line 82
        if (time==null) {
            return "NULL";
        } else {
            return "'"+time+"'::timestamptz";
        }
    }

    final String convertToNullableTEXT(String str) {
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker
        // in file CompilerQueryInvoker.java, at line 114
        if (str==null) {
            return "''::TEXT";
        } else {
            return "'"+str.replace("'","''")+"'::TEXT";
        }
    }

    final String convertToNonNullableTEXT(String str) {
        // Generated by class org.openprovenance.prov.template.compiler.CompilerQueryInvoker, method generateQueryInvoker
        // in file CompilerQueryInvoker.java, at line 130
        return "'"+str.replace("'","''")+"'::TEXT";
    }
}
