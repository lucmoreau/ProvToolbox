How many nodes are there?  501
How many different trees types are there?  125
How many different edge types are there?  92

From nodes to subtree-types mapping: Map(69 -> 28, 365 -> 0, 138 -> 1, 101 -> 11, 479 -> 0, 347 -> 10, 333 -> 2, 249 -> 0, 468 -> 4, 234 -> 0, 0 -> 4, 88 -> 1, 481 -> 30, 352 -> 97, 408 -> 1, 170 -> 90, 115 -> 1, 217 -> 25, 276 -> 26, 308 -> 89, 5 -> 52, 449 -> 0, 120 -> 6, 247 -> 0, 379 -> 9, 440 -> 2, 269 -> 2, 202 -> 1, 10 -> 111, 385 -> 1, 384 -> 1, 56 -> 106, 142 -> 2, 500 -> 112, 472 -> 2, 340 -> 1, 153 -> 2, 174 -> 1, 404 -> 2, 185 -> 76, 42 -> 112, 417 -> 0, 24 -> 52, 288 -> 1, 301 -> 1, 320 -> 1, 436 -> 87, 37 -> 2, 25 -> 5, 257 -> 2, 389 -> 1, 52 -> 5, 14 -> 1, 184 -> 1, 372 -> 0, 110 -> 85, 125 -> 0, 344 -> 1, 357 -> 23, 196 -> 116, 460 -> 2, 157 -> 118, 189 -> 0, 20 -> 2, 421 -> 86, 46 -> 4, 93 -> 80, 284 -> 52, 416 -> 95, 325 -> 0, 152 -> 3, 228 -> 1, 289 -> 1, 448 -> 1, 57 -> 2, 316 -> 20, 78 -> 0, 261 -> 0, 29 -> 7, 216 -> 0, 475 -> 2, 492 -> 74, 164 -> 55, 179 -> 3, 443 -> 2, 321 -> 85, 376 -> 123, 211 -> 1, 253 -> 51, 485 -> 1, 106 -> 96, 238 -> 3, 121 -> 4, 348 -> 9, 84 -> 67, 353 -> 2, 480 -> 1, 147 -> 4, 397 -> 109, 280 -> 1, 61 -> 0, 221 -> 85, 293 -> 2, 453 -> 1, 132 -> 0, 396 -> 0, 89 -> 54, 133 -> 8, 411 -> 94, 116 -> 0, 243 -> 1, 428 -> 1, 1 -> 1, 265 -> 42, 312 -> 2, 74 -> 0, 206 -> 5, 307 -> 1, 292 -> 13, 233 -> 1, 452 -> 85, 6 -> 112, 248 -> 1, 60 -> 114, 380 -> 1, 117 -> 0, 439 -> 14, 270 -> 0, 85 -> 0, 201 -> 5, 381 -> 1, 220 -> 70, 366 -> 3, 102 -> 29, 334 -> 1, 302 -> 1, 260 -> 1, 349 -> 2, 28 -> 79, 38 -> 1, 160 -> 0, 392 -> 2, 297 -> 75, 70 -> 0, 424 -> 1, 192 -> 21, 407 -> 65, 429 -> 1, 275 -> 40, 21 -> 1, 137 -> 7, 165 -> 6, 33 -> 114, 92 -> 0, 467 -> 77, 229 -> 22, 484 -> 2, 252 -> 112, 197 -> 6, 361 -> 1, 65 -> 0, 435 -> 1, 97 -> 47, 329 -> 0, 461 -> 7, 493 -> 1, 456 -> 1, 324 -> 46, 285 -> 78, 224 -> 4, 317 -> 57, 156 -> 2, 403 -> 3, 9 -> 0, 188 -> 59, 388 -> 1, 53 -> 2, 356 -> 14, 169 -> 0, 141 -> 41, 420 -> 92, 499 -> 13, 109 -> 0, 328 -> 1, 471 -> 1, 256 -> 0, 488 -> 17, 124 -> 2, 225 -> 1, 339 -> 59, 77 -> 96, 193 -> 1, 476 -> 1, 489 -> 2, 212 -> 118, 96 -> 2, 393 -> 1, 457 -> 72, 173 -> 1, 13 -> 8, 129 -> 13, 41 -> 56, 371 -> 0, 134 -> 0, 73 -> 117, 128 -> 5, 343 -> 1, 237 -> 0, 105 -> 8, 244 -> 1, 2 -> 1, 266 -> 0, 360 -> 24, 205 -> 2, 311 -> 5, 398 -> 68, 298 -> 6, 412 -> 3, 425 -> 91, 430 -> 48, 166 -> 98, 32 -> 1, 34 -> 6, 148 -> 11, 264 -> 63, 45 -> 38, 161 -> 2, 279 -> 12, 64 -> 2, 180 -> 1, 296 -> 85, 17 -> 122, 444 -> 1, 149 -> 1, 375 -> 2, 176 -> 2, 423 -> 2, 191 -> 1, 402 -> 4, 22 -> 52, 44 -> 5, 286 -> 1, 291 -> 0, 59 -> 1, 118 -> 43, 281 -> 19, 204 -> 58, 259 -> 52, 27 -> 1, 413 -> 1, 71 -> 59, 391 -> 1, 12 -> 2, 445 -> 83, 382 -> 0, 54 -> 2, 313 -> 6, 144 -> 73, 498 -> 0, 49 -> 1, 466 -> 1, 335 -> 0, 236 -> 3, 181 -> 62, 350 -> 112, 86 -> 1, 159 -> 39, 187 -> 96, 406 -> 0, 172 -> 1, 113 -> 2, 219 -> 2, 274 -> 1, 419 -> 1, 81 -> 47, 377 -> 114, 230 -> 0, 362 -> 4, 451 -> 2, 76 -> 2, 7 -> 31, 245 -> 124, 318 -> 53, 39 -> 1, 434 -> 100, 98 -> 1, 303 -> 1, 271 -> 0, 208 -> 0, 477 -> 2, 387 -> 2, 494 -> 0, 345 -> 34, 367 -> 0, 103 -> 1, 323 -> 5, 140 -> 60, 213 -> 7, 91 -> 0, 483 -> 1, 66 -> 12, 240 -> 2, 251 -> 24, 155 -> 4, 198 -> 2, 108 -> 6, 330 -> 85, 462 -> 93, 130 -> 60, 399 -> 8, 278 -> 1, 455 -> 33, 223 -> 0, 394 -> 1, 306 -> 37, 135 -> 0, 299 -> 1, 226 -> 0, 3 -> 1, 267 -> 83, 438 -> 16, 431 -> 50, 241 -> 28, 80 -> 119, 167 -> 99, 35 -> 114, 473 -> 1, 490 -> 0, 426 -> 1, 162 -> 2, 374 -> 3, 255 -> 2, 209 -> 18, 487 -> 114, 112 -> 2, 342 -> 0, 123 -> 1, 355 -> 7, 458 -> 102, 194 -> 7, 145 -> 44, 48 -> 99, 63 -> 3, 295 -> 104, 18 -> 1, 282 -> 6, 150 -> 1, 414 -> 0, 95 -> 1, 327 -> 88, 409 -> 2, 263 -> 10, 310 -> 1, 50 -> 0, 67 -> 101, 199 -> 3, 177 -> 2, 182 -> 1, 331 -> 2, 441 -> 0, 16 -> 28, 370 -> 28, 463 -> 3, 127 -> 82, 338 -> 9, 470 -> 0, 359 -> 1, 31 -> 105, 336 -> 13, 154 -> 15, 11 -> 0, 72 -> 2, 175 -> 120, 386 -> 84, 314 -> 2, 446 -> 2, 143 -> 2, 497 -> 6, 43 -> 112, 250 -> 71, 465 -> 5, 231 -> 3, 450 -> 2, 99 -> 0, 363 -> 36, 87 -> 2, 482 -> 7, 203 -> 5, 495 -> 1, 218 -> 115, 104 -> 43, 368 -> 1, 319 -> 103, 40 -> 1, 304 -> 15, 26 -> 113, 258 -> 8, 158 -> 0, 351 -> 1, 390 -> 0, 186 -> 1, 55 -> 119, 114 -> 0, 401 -> 0, 171 -> 110, 139 -> 1, 418 -> 0, 23 -> 5, 8 -> 1, 75 -> 45, 290 -> 67, 119 -> 3, 58 -> 0, 378 -> 6, 235 -> 2, 246 -> 13, 433 -> 67, 207 -> 4, 478 -> 49, 272 -> 108, 383 -> 2, 346 -> 1, 82 -> 59, 214 -> 78, 287 -> 1, 151 -> 0, 300 -> 0, 447 -> 3, 315 -> 2, 432 -> 5, 410 -> 6, 36 -> 107, 168 -> 0, 262 -> 5, 146 -> 27, 30 -> 28, 51 -> 1, 405 -> 109, 190 -> 0, 183 -> 2, 19 -> 0, 422 -> 1, 273 -> 3, 373 -> 0, 305 -> 9, 210 -> 0, 326 -> 2, 107 -> 66, 239 -> 1, 242 -> 25, 4 -> 2, 294 -> 1, 126 -> 1, 136 -> 2, 341 -> 7, 268 -> 3, 358 -> 61, 79 -> 0, 195 -> 35, 437 -> 4, 474 -> 1, 400 -> 2, 94 -> 121, 283 -> 1, 415 -> 69, 395 -> 32, 464 -> 1, 332 -> 64, 427 -> 1, 459 -> 2, 131 -> 1, 47 -> 81, 15 -> 2, 163 -> 0, 200 -> 2, 68 -> 1, 62 -> 13, 178 -> 3, 277 -> 2, 442 -> 0, 369 -> 6, 90 -> 77, 111 -> 1, 254 -> 2, 227 -> 0, 322 -> 2, 486 -> 10, 337 -> 0, 122 -> 1, 469 -> 3, 354 -> 7, 83 -> 0, 309 -> 3, 215 -> 0, 491 -> 31, 222 -> 5, 496 -> 2, 454 -> 5, 364 -> 85, 232 -> 2, 100 -> 12)

From nodes to edge-types Mapping: Map(69 -> 80, 365 -> 32, 138 -> 44, 101 -> 90, 479 -> 32, 347 -> 54, 333 -> 70, 249 -> 32, 468 -> 25, 234 -> 32, 0 -> 25, 88 -> 44, 481 -> 69, 352 -> 47, 408 -> 44, 170 -> 22, 115 -> 44, 217 -> 69, 276 -> 82, 308 -> 27, 5 -> 36, 449 -> 32, 120 -> 78, 247 -> 32, 379 -> 77, 440 -> 70, 269 -> 70, 202 -> 44, 10 -> 82, 385 -> 44, 384 -> 44, 56 -> 8, 142 -> 70, 500 -> 59, 472 -> 70, 340 -> 44, 153 -> 70, 174 -> 44, 404 -> 70, 185 -> 74, 42 -> 59, 417 -> 32, 24 -> 36, 288 -> 44, 301 -> 44, 320 -> 44, 436 -> 49, 37 -> 70, 25 -> 58, 257 -> 70, 389 -> 44, 52 -> 58, 14 -> 44, 184 -> 44, 372 -> 32, 110 -> 29, 125 -> 32, 344 -> 44, 357 -> 86, 196 -> 26, 460 -> 70, 157 -> 4, 189 -> 32, 20 -> 70, 421 -> 82, 46 -> 25, 93 -> 65, 284 -> 36, 416 -> 28, 325 -> 32, 152 -> 20, 228 -> 44, 289 -> 44, 448 -> 44, 57 -> 70, 316 -> 52, 78 -> 32, 261 -> 32, 29 -> 7, 216 -> 32, 475 -> 70, 492 -> 11, 164 -> 56, 179 -> 20, 443 -> 70, 321 -> 29, 376 -> 33, 211 -> 44, 253 -> 89, 485 -> 44, 106 -> 6, 238 -> 20, 121 -> 25, 348 -> 77, 84 -> 0, 353 -> 70, 480 -> 44, 147 -> 25, 397 -> 71, 280 -> 44, 61 -> 32, 221 -> 29, 293 -> 70, 453 -> 44, 132 -> 32, 396 -> 32, 89 -> 49, 133 -> 45, 411 -> 22, 116 -> 32, 243 -> 44, 428 -> 44, 1 -> 44, 265 -> 34, 312 -> 70, 74 -> 32, 206 -> 58, 307 -> 44, 292 -> 12, 233 -> 44, 452 -> 29, 6 -> 59, 248 -> 44, 60 -> 3, 380 -> 44, 117 -> 32, 439 -> 37, 270 -> 32, 85 -> 32, 201 -> 58, 381 -> 44, 220 -> 64, 366 -> 20, 102 -> 87, 334 -> 44, 302 -> 44, 260 -> 44, 349 -> 70, 28 -> 66, 38 -> 44, 160 -> 32, 392 -> 70, 297 -> 88, 70 -> 32, 424 -> 44, 192 -> 81, 407 -> 63, 429 -> 44, 275 -> 57, 21 -> 44, 137 -> 7, 165 -> 78, 33 -> 3, 92 -> 32, 467 -> 67, 229 -> 18, 484 -> 70, 252 -> 59, 197 -> 78, 361 -> 44, 65 -> 32, 435 -> 44, 97 -> 61, 329 -> 32, 461 -> 7, 493 -> 44, 456 -> 44, 324 -> 30, 285 -> 46, 224 -> 25, 317 -> 22, 156 -> 70, 403 -> 20, 9 -> 32, 188 -> 42, 388 -> 44, 53 -> 70, 356 -> 37, 169 -> 32, 141 -> 39, 420 -> 24, 499 -> 12, 109 -> 32, 328 -> 44, 471 -> 44, 256 -> 32, 488 -> 22, 124 -> 70, 225 -> 44, 339 -> 42, 77 -> 6, 193 -> 44, 476 -> 44, 489 -> 70, 212 -> 4, 96 -> 70, 393 -> 44, 457 -> 5, 173 -> 44, 13 -> 45, 129 -> 12, 41 -> 49, 371 -> 32, 134 -> 32, 73 -> 60, 128 -> 58, 343 -> 44, 237 -> 32, 105 -> 45, 244 -> 44, 2 -> 44, 266 -> 32, 360 -> 61, 205 -> 70, 311 -> 58, 398 -> 60, 298 -> 78, 412 -> 20, 425 -> 51, 430 -> 72, 166 -> 50, 32 -> 44, 34 -> 78, 148 -> 90, 264 -> 49, 45 -> 40, 161 -> 70, 279 -> 55, 64 -> 70, 180 -> 44, 296 -> 29, 17 -> 79, 444 -> 44, 149 -> 44, 375 -> 70, 176 -> 70, 423 -> 70, 191 -> 44, 402 -> 25, 22 -> 36, 44 -> 58, 286 -> 44, 291 -> 32, 59 -> 44, 118 -> 85, 281 -> 46, 204 -> 1, 259 -> 36, 27 -> 44, 413 -> 44, 71 -> 42, 391 -> 44, 12 -> 70, 445 -> 73, 382 -> 32, 54 -> 70, 313 -> 78, 144 -> 3, 498 -> 32, 49 -> 44, 466 -> 44, 335 -> 32, 236 -> 20, 181 -> 35, 350 -> 59, 86 -> 44, 159 -> 91, 187 -> 6, 406 -> 32, 172 -> 44, 113 -> 70, 219 -> 70, 274 -> 44, 419 -> 44, 81 -> 61, 377 -> 3, 230 -> 32, 362 -> 25, 451 -> 70, 76 -> 70, 7 -> 62, 245 -> 61, 318 -> 56, 39 -> 44, 434 -> 47, 98 -> 44, 303 -> 44, 271 -> 32, 208 -> 32, 477 -> 70, 387 -> 70, 494 -> 32, 345 -> 19, 367 -> 32, 103 -> 44, 323 -> 58, 140 -> 14, 213 -> 7, 91 -> 32, 483 -> 44, 66 -> 55, 240 -> 70, 251 -> 61, 155 -> 25, 198 -> 70, 108 -> 78, 330 -> 29, 462 -> 38, 130 -> 14, 399 -> 45, 278 -> 44, 455 -> 53, 223 -> 32, 394 -> 44, 306 -> 13, 135 -> 32, 299 -> 44, 226 -> 32, 3 -> 44, 267 -> 73, 438 -> 18, 431 -> 66, 241 -> 80, 80 -> 75, 167 -> 84, 35 -> 3, 473 -> 44, 490 -> 32, 426 -> 44, 162 -> 70, 374 -> 20, 255 -> 70, 209 -> 9, 487 -> 3, 112 -> 70, 342 -> 32, 123 -> 44, 355 -> 7, 458 -> 22, 194 -> 7, 145 -> 76, 48 -> 84, 63 -> 20, 295 -> 49, 18 -> 44, 282 -> 78, 150 -> 44, 414 -> 32, 95 -> 44, 327 -> 17, 409 -> 70, 263 -> 54, 310 -> 44, 50 -> 32, 67 -> 2, 199 -> 20, 177 -> 70, 182 -> 44, 331 -> 70, 441 -> 32, 16 -> 80, 370 -> 80, 463 -> 20, 127 -> 15, 338 -> 77, 470 -> 32, 359 -> 44, 31 -> 3, 336 -> 12, 154 -> 31, 11 -> 32, 72 -> 70, 175 -> 3, 386 -> 23, 314 -> 70, 446 -> 70, 143 -> 70, 497 -> 78, 43 -> 59, 250 -> 68, 465 -> 58, 231 -> 20, 450 -> 70, 99 -> 32, 363 -> 82, 87 -> 70, 482 -> 7, 203 -> 58, 495 -> 44, 218 -> 56, 104 -> 85, 368 -> 44, 319 -> 50, 40 -> 44, 304 -> 31, 26 -> 41, 258 -> 45, 158 -> 32, 351 -> 44, 390 -> 32, 186 -> 44, 55 -> 75, 114 -> 32, 401 -> 32, 171 -> 23, 139 -> 44, 418 -> 32, 23 -> 58, 8 -> 44, 75 -> 18, 290 -> 0, 119 -> 20, 58 -> 32, 378 -> 78, 235 -> 70, 246 -> 12, 433 -> 0, 207 -> 25, 478 -> 22, 272 -> 10, 383 -> 70, 346 -> 44, 82 -> 42, 214 -> 46, 287 -> 44, 151 -> 32, 300 -> 32, 447 -> 20, 315 -> 70, 432 -> 58, 410 -> 78, 36 -> 16, 168 -> 32, 262 -> 58, 146 -> 56, 30 -> 80, 51 -> 44, 405 -> 71, 190 -> 32, 183 -> 70, 19 -> 32, 422 -> 44, 273 -> 20, 373 -> 32, 305 -> 77, 210 -> 32, 326 -> 70, 107 -> 23, 239 -> 44, 242 -> 69, 4 -> 70, 294 -> 44, 126 -> 44, 136 -> 70, 341 -> 7, 268 -> 20, 358 -> 83, 79 -> 32, 195 -> 48, 437 -> 25, 474 -> 44, 400 -> 70, 94 -> 61, 283 -> 44, 415 -> 43, 395 -> 82, 464 -> 44, 332 -> 49, 427 -> 44, 459 -> 70, 131 -> 44, 47 -> 21, 15 -> 70, 163 -> 32, 200 -> 70, 68 -> 44, 62 -> 12, 178 -> 20, 277 -> 70, 442 -> 32, 369 -> 78, 90 -> 67, 111 -> 44, 254 -> 70, 227 -> 32, 322 -> 70, 486 -> 54, 337 -> 32, 122 -> 44, 469 -> 20, 354 -> 7, 83 -> 32, 309 -> 20, 215 -> 32, 491 -> 62, 222 -> 58, 496 -> 70, 454 -> 58, 364 -> 29, 232 -> 70, 100 -> 55)

Mapping from subtree-types to edges-types: Map(69 -> Set(43), 101 -> Set(2), 0 -> Set(32), 88 -> Set(17), 115 -> Set(56), 5 -> Set(58), 120 -> Set(3), 10 -> Set(54), 56 -> Set(49), 42 -> Set(34), 24 -> Set(61), 37 -> Set(13), 25 -> Set(69), 52 -> Set(36), 14 -> Set(37), 110 -> Set(23), 20 -> Set(52), 46 -> Set(30), 93 -> Set(38), 57 -> Set(22), 78 -> Set(46), 29 -> Set(87), 106 -> Set(8), 121 -> Set(61), 84 -> Set(23), 61 -> Set(83), 89 -> Set(27), 116 -> Set(26), 1 -> Set(44), 74 -> Set(11), 6 -> Set(78), 60 -> Set(14), 117 -> Set(60), 85 -> Set(29), 102 -> Set(22), 28 -> Set(80), 38 -> Set(40), 70 -> Set(64), 21 -> Set(81), 33 -> Set(53), 92 -> Set(24), 65 -> Set(63), 97 -> Set(47), 9 -> Set(77), 53 -> Set(56), 109 -> Set(71), 124 -> Set(61), 77 -> Set(67), 96 -> Set(6), 13 -> Set(12), 41 -> Set(39), 73 -> Set(3), 105 -> Set(3), 2 -> Set(70), 32 -> Set(82), 34 -> Set(19), 45 -> Set(18), 64 -> Set(49), 17 -> Set(22), 22 -> Set(18), 44 -> Set(76), 59 -> Set(42), 118 -> Set(4), 27 -> Set(56), 71 -> Set(68), 12 -> Set(55), 54 -> Set(49), 49 -> Set(22), 86 -> Set(82), 113 -> Set(41), 81 -> Set(21), 76 -> Set(74), 7 -> Set(7), 39 -> Set(91), 98 -> Set(50), 103 -> Set(50), 91 -> Set(51), 66 -> Set(23), 108 -> Set(10), 3 -> Set(20), 80 -> Set(65), 35 -> Set(48), 112 -> Set(59), 123 -> Set(33), 48 -> Set(72), 63 -> Set(49), 18 -> Set(9), 95 -> Set(28), 50 -> Set(66), 67 -> Set(0), 16 -> Set(18), 31 -> Set(62), 11 -> Set(90), 72 -> Set(5), 43 -> Set(85), 99 -> Set(84), 87 -> Set(49), 104 -> Set(49), 40 -> Set(57), 26 -> Set(82), 55 -> Set(56), 114 -> Set(3), 23 -> Set(86), 8 -> Set(45), 75 -> Set(88), 119 -> Set(75), 58 -> Set(1), 82 -> Set(15), 36 -> Set(82), 30 -> Set(69), 51 -> Set(89), 19 -> Set(46), 107 -> Set(16), 4 -> Set(25), 79 -> Set(66), 94 -> Set(22), 47 -> Set(61), 15 -> Set(31), 68 -> Set(60), 62 -> Set(35), 90 -> Set(22), 111 -> Set(82), 122 -> Set(79), 83 -> Set(73), 100 -> Set(47))

Mapping from edge-types to subtree-types: Map(69 -> Set(25, 30), 0 -> Set(67), 88 -> Set(75), 5 -> Set(72), 10 -> Set(108), 56 -> Set(115, 53, 27, 55), 42 -> Set(59), 24 -> Set(92), 37 -> Set(14), 25 -> Set(4), 52 -> Set(20), 14 -> Set(60), 20 -> Set(3), 46 -> Set(78, 19), 57 -> Set(40), 78 -> Set(6), 29 -> Set(85), 84 -> Set(99), 61 -> Set(121, 24, 124, 47), 89 -> Set(51), 1 -> Set(58), 74 -> Set(76), 6 -> Set(96), 60 -> Set(68, 117), 85 -> Set(43), 28 -> Set(95), 38 -> Set(93), 70 -> Set(2), 21 -> Set(81), 33 -> Set(123), 65 -> Set(80), 9 -> Set(18), 53 -> Set(33), 77 -> Set(9), 13 -> Set(37), 41 -> Set(113), 73 -> Set(83), 2 -> Set(101), 32 -> Set(0), 34 -> Set(42), 45 -> Set(8), 64 -> Set(70), 17 -> Set(88), 22 -> Set(57, 102, 17, 49, 94, 90), 44 -> Set(1), 59 -> Set(112), 27 -> Set(89), 71 -> Set(109), 12 -> Set(13), 54 -> Set(10), 49 -> Set(56, 64, 54, 63, 87, 104), 86 -> Set(23), 81 -> Set(21), 76 -> Set(44), 7 -> Set(7), 39 -> Set(41), 91 -> Set(39), 66 -> Set(79, 50), 3 -> Set(114, 105, 120, 73), 80 -> Set(28), 35 -> Set(62), 48 -> Set(35), 63 -> Set(65), 18 -> Set(22, 45, 16), 50 -> Set(103, 98), 67 -> Set(77), 16 -> Set(107), 31 -> Set(15), 11 -> Set(74), 72 -> Set(48), 43 -> Set(69), 87 -> Set(29), 40 -> Set(38), 26 -> Set(116), 55 -> Set(12), 23 -> Set(110, 66, 84), 8 -> Set(106), 75 -> Set(119), 58 -> Set(5), 82 -> Set(32, 86, 26, 36, 111), 36 -> Set(52), 30 -> Set(46), 51 -> Set(91), 19 -> Set(34), 4 -> Set(118), 79 -> Set(122), 47 -> Set(100, 97), 15 -> Set(82), 68 -> Set(71), 62 -> Set(31), 90 -> Set(11), 83 -> Set(61))

For each set of edge-types below, we associate all subtree-types associated to them

List((0, [act]), (1, [usd, winfob]:  [act, ent]), (2, [usd, winfob]:  [wdf, wgb, waw, wat, winfob]:  [ag, act, ent]))
Set(Winfob(Set(Act())), Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())), Winfob(Set(Winfob(Set(Act())), Waw(Set(Ag()),Set()))))
Set(Winfob(Set(Act())), Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())))), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())), Winfob(Set(Winfob(Set(Act())), Waw(Set(Ag()),Set()))))

List((0, [ent]), (1, [wdf, wgb]:  [act, ent]), (2, [wdf, wgb]:  [wdf, wgb, usd, wat]:  [ag, act, ent]))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()), Wgb(Set(Usd(Set(Ent())))))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Ent(), Wgb(Set(Usd(Set(Ent())))))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wdf(Set(Wgb(Set(Act()))),Set()), Ent(), Wgb(Set(Usd(Set(Ent())))))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wdf(Set(Wdf(Set(Ent()),Set())),Set()), Ent(), Wgb(Set(Usd(Set(Ent())))))

List((0, [ent]), (1, [wdf, wgb, wat]:  [ag, act, ent]), (2, [wdf, wgb]:  [wdf, wgb, usd, waw, winfob]:  [ag, act, ent]))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wgb(Set(Waw(Set(Ag()),Set()))), Ent(), Wat(Set(Ag())), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Ent(), Wat(Set(Ag())), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))

List((0, [ent]), (1, [wdf, wgb]:  [act, ent]), (2, [wdf, wgb]:  [wdf, wgb, usd, winfob]:  [act, ent]))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wdf(Set(Wdf(Set(Ent()),Set())),Set()), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wdf(Set(Wgb(Set(Act()))),Set()), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())))), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))

List((0, [act]), (1, [usd, waw, winfob]:  [ag, act, ent]), (2, [usd, winfob]:  [wdf, wgb, usd, wat, winfob]:  [ag, act, ent]))
Set(Winfob(Set(Act())), Act(), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())), Waw(Set(Ag()),Set()))
Set(Winfob(Set(Act())), Usd(Set(Wgb(Set(Act())))), Act(), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())), Waw(Set(Ag()),Set()))

List((0, [act]), (1, [usd, winfob]:  [act, ent]), (2, [usd, winfob]:  [wdf, wgb, usd, waw, wat, winfob]:  [ag, act, ent]))
Set(Winfob(Set(Act())), Act(), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())))
Set(Winfob(Set(Act())), Usd(Set(Wgb(Set(Act())))), Act(), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())))
Set(Winfob(Set(Act())), Usd(Set(Wdf(Set(Ent()),Set()))), Usd(Set(Wgb(Set(Act())))), Act(), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())))
Set(Winfob(Set(Act())), Usd(Set(Wdf(Set(Ent()),Set()))), Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())))), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())))
Set(Winfob(Set(Act())), Usd(Set(Wdf(Set(Ent()),Set()))), Usd(Set(Wgb(Set(Act())))), Act(), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())), Winfob(Set(Usd(Set(Ent())))))
Set(Winfob(Set(Act())), Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())))), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())))

List((0, [ent]), (1, [wdf, wgb]:  [act, ent]), (2, [wdf, wgb]:  [wdf, wgb, usd, waw, wat, winfob]:  [ag, act, ent]))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wgb(Set(Winfob(Set(Act())), Waw(Set(Ag()),Set()))), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Wdf(Set(Wdf(Set(Ent()),Set())),Set()), Ent(), Wgb(Set(Usd(Set(Ent())))))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Wdf(Set(Wat(Set(Ag()))),Set()), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()), Wgb(Set(Usd(Set(Ent())))))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Ent())
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wdf(Set(Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wgb(Set(Waw(Set(Ag()),Set()))), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()), Wgb(Set(Usd(Set(Ent())))))

List((0, [ent]), (1, [wdf, wgb, wat]:  [ag, act, ent]), (2, [wdf, wgb]:  [wdf, wgb, usd, winfob]:  [act, ent]))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wdf(Set(Wdf(Set(Ent()),Set())),Set()), Ent(), Wat(Set(Ag())), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Ent(), Wat(Set(Ag())), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))

List((0, [act]), (1, [usd]:  [ent]), (2, [usd]:  [wdf, wgb, wat]:  [ag, act, ent]))
Set(Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())))
Set(Usd(Set(Wdf(Set(Ent()),Set()))), Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())))
Set(Usd(Set(Wgb(Set(Act())))), Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())))
Set(Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())))), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag())))), Usd(Set(Ent())))

List((0, [ent]), (1, [wdf, wgb, wat]:  [ag, act, ent]), (2, [wdf, wgb, wat]:  [wdf, wgb, usd, wat, aobo, winfob]:  [ag, act, ent]))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wdf(Set(Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wdf(Set(Wdf(Set(Ent()),Set())),Set()), Wat(Set(Aobo(Set(Ag()),Set()))), Ent(), Wat(Set(Ag())))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wat(Set(Aobo(Set(Ag()),Set()))), Ent(), Wat(Set(Ag())), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wat(Set(Aobo(Set(Ag()),Set()))), Ent(), Wat(Set(Ag())))

List((0, [ent]), (1, [wdf, wgb]:  [act, ent]), (2, [wdf, wgb]:  [wdf, wgb, usd]:  [act, ent]))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wdf(Set(Wgb(Set(Act()))),Set()), Wdf(Set(Wdf(Set(Ent()),Set())),Set()), Ent(), Wgb(Set(Usd(Set(Ent())))))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()), Wgb(Set(Usd(Set(Ent())))))

List((0, [act]), (1, [usd, winfob]:  [act, ent]), (2, [usd, winfob]:  [wdf, wgb, usd, waw, winfob]:  [ag, act, ent]))
Set(Winfob(Set(Act())), Usd(Set(Wdf(Set(Ent()),Set()))), Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())))), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Usd(Set(Ent())))
Set(Winfob(Set(Act())), Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())))), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Usd(Set(Ent())))
Set(Winfob(Set(Act())), Act(), Usd(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())))), Winfob(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Usd(Set(Ent())), Winfob(Set(Winfob(Set(Act())), Waw(Set(Ag()),Set()))))

List((0, [ent]), (1, [wdf, wgb]:  [act, ent]), (2, [wdf, wgb]:  [wdf, wgb, usd, wat, winfob]:  [ag, act, ent]))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wdf(Set(Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wdf(Set(Wat(Set(Ag()))),Set()), Wdf(Set(Wdf(Set(Ent()),Set())),Set()), Ent(), Wgb(Set(Usd(Set(Ent())))))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wdf(Set(Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Ent())
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wdf(Set(Wgb(Set(Act()))),Set()), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Ent(), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))

List((0, [ent]), (1, [wdf, wgb, wat]:  [ag, act, ent]), (2, [wdf, wgb]:  [wdf, wgb, usd, waw, wat, winfob]:  [ag, act, ent]))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Wgb(Set(Waw(Set(Ag()),Set()))), Ent(), Wat(Set(Ag())))
Set(Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wat(Set(Ag()))),Set()), Wdf(Set(Ent()),Set()), Wgb(Set(Act())), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())))), Wgb(Set(Winfob(Set(Act())), Usd(Set(Ent())), Waw(Set(Ag()),Set()))), Wdf(Set(Wdf(Set(Ent()),Set())),Set()), Ent(), Wat(Set(Ag())), Wdf(Set(Wdf(Set(Ent()),Set()), Wgb(Set(Act()))),Set()))
