// Generated automatically by ProvToolbox for template configuration 'template_library'
// by class org.openprovenance.prov.template.compiler.CompilerBeanChecker, method generateBeanChecker,
// in file CompilerBeanChecker.java, at line 29
package org.openprovenance.prov.template.library.ptm_copy.client.common;

public class BeanChecker implements BeanProcessor {
  private static final <T> T notNull(T object, String field, String template) {
    // Generated by class org.openprovenance.prov.template.compiler.CompilerBeanChecker, method generateBeanChecker
    // in file CompilerBeanChecker.java, at line 50
    if (object==null) {
      throw new IllegalStateException("The object field " + field + " is null in template " + template);
    } else {
      return object;
    }
  }

  public final Ptm_expandingBean process(Ptm_expandingBean bean) {
    // Generated by class org.openprovenance.prov.template.compiler.CompilerBeanChecker, method generateCheckerMethod
    // in file CompilerBeanChecker.java, at line 107
    notNull(bean.template,"template","ptm_expanding");
    notNull(bean.bindings,"bindings","ptm_expanding");
    return bean;
  }

  public final Ptm_mexpandingBean process(Ptm_mexpandingBean bean) {
    // Generated by class org.openprovenance.prov.template.compiler.CompilerBeanChecker, method generateCheckerMethod
    // in file CompilerBeanChecker.java, at line 107
    notNull(bean.mtemplate,"mtemplate","ptm_mexpanding");
    notNull(bean.bindings,"bindings","ptm_mexpanding");
    return bean;
  }
}
