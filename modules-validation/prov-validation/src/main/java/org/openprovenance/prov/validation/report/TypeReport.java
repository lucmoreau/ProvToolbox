//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.11.10 at 05:05:05 PM GMT 
//


package org.openprovenance.prov.validation.report;

import org.openprovenance.apache.commons.lang.builder.EqualsBuilder;
import org.openprovenance.apache.commons.lang.builder.HashCodeBuilder;
import org.openprovenance.apache.commons.lang.builder.ToStringBuilder;
import org.openprovenance.prov.model.*;
import org.openprovenance.apache.commons.lang.builder.Equals;
import org.openprovenance.apache.commons.lang.builder.HashCode;
import org.openprovenance.apache.commons.lang.builder.ToString;
import jakarta.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for TypeReport complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TypeReport"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;group ref="{http://www.w3.org/ns/prov#}documentElements"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="key" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TypeReport", propOrder = {
    "entity",
    "activity",
    "wasGeneratedBy",
    "used",
    "wasInformedBy",
    "wasStartedBy",
    "wasEndedBy",
    "wasInvalidatedBy",
    "wasDerivedFrom",
    "agent",
    "wasAttributedTo",
    "wasAssociatedWith",
    "actedOnBehalfOf",
    "wasInfluencedBy",
    "specializationOf",
    "alternateOf",
    "hadMember",
    "mentionOf",
    "hadDictionaryMember",
    "derivedByInsertionFrom",
    "derivedByRemovalFrom"
})
public class TypeReport
    implements Equals, HashCode, ToString
{

    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<Entity> entity;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<Activity> activity;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<WasGeneratedBy> wasGeneratedBy;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<Used> used;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<WasInformedBy> wasInformedBy;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<WasStartedBy> wasStartedBy;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<WasEndedBy> wasEndedBy;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<WasInvalidatedBy> wasInvalidatedBy;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<WasDerivedFrom> wasDerivedFrom;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<Agent> agent;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<WasAttributedTo> wasAttributedTo;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<WasAssociatedWith> wasAssociatedWith;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<ActedOnBehalfOf> actedOnBehalfOf;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<WasInfluencedBy> wasInfluencedBy;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<SpecializationOf> specializationOf;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<AlternateOf> alternateOf;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<HadMember> hadMember;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<MentionOf> mentionOf;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<DictionaryMembership> hadDictionaryMember;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<DerivedByInsertionFrom> derivedByInsertionFrom;
    @XmlElement(namespace = "http://www.w3.org/ns/prov#")
    protected List<DerivedByRemovalFrom> derivedByRemovalFrom;
    @XmlAttribute(name = "key")
    protected String key;

    /**
     * Gets the value of the entity property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the entity property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEntity().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Entity }
     * @return a list of {@link Entity} objects
     * 
     * 
     */
    public List<Entity> getEntity() {
        if (entity == null) {
            entity = new ArrayList<Entity>();
        }
        return this.entity;
    }

    /**
     * Gets the value of the activity property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the activity property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActivity().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Activity }
     * @return a list of {@link Activity} objects
     * 
     */
    public List<Activity> getActivity() {
        if (activity == null) {
            activity = new ArrayList<Activity>();
        }
        return this.activity;
    }

    /**
     * Gets the value of the wasGeneratedBy property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wasGeneratedBy property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWasGeneratedBy().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WasGeneratedBy }
     * @return a list of {@link WasGeneratedBy} objects
     * 
     */
    public List<WasGeneratedBy> getWasGeneratedBy() {
        if (wasGeneratedBy == null) {
            wasGeneratedBy = new ArrayList<WasGeneratedBy>();
        }
        return this.wasGeneratedBy;
    }

    /**
     * Gets the value of the used property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the used property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUsed().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Used }
     * @return a list of {@link Used} objects
     * 
     */
    public List<Used> getUsed() {
        if (used == null) {
            used = new ArrayList<Used>();
        }
        return this.used;
    }

    /**
     * Gets the value of the wasInformedBy property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wasInformedBy property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWasInformedBy().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WasInformedBy }
     * @return a list of {@link WasInformedBy} objects
     * 
     */
    public List<WasInformedBy> getWasInformedBy() {
        if (wasInformedBy == null) {
            wasInformedBy = new ArrayList<WasInformedBy>();
        }
        return this.wasInformedBy;
    }

    /**
     * Gets the value of the wasStartedBy property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wasStartedBy property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWasStartedBy().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WasStartedBy }
     * @return a list of {@link WasStartedBy} objects
     * 
     */
    public List<WasStartedBy> getWasStartedBy() {
        if (wasStartedBy == null) {
            wasStartedBy = new ArrayList<WasStartedBy>();
        }
        return this.wasStartedBy;
    }

    /**
     * Gets the value of the wasEndedBy property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wasEndedBy property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWasEndedBy().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WasEndedBy }
     * @return a list of {@link WasEndedBy} objects
     * 
     */
    public List<WasEndedBy> getWasEndedBy() {
        if (wasEndedBy == null) {
            wasEndedBy = new ArrayList<WasEndedBy>();
        }
        return this.wasEndedBy;
    }

    /**
     * Gets the value of the wasInvalidatedBy property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wasInvalidatedBy property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWasInvalidatedBy().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WasInvalidatedBy }
     * @return a list of {@link WasInvalidatedBy} objects
     * 
     */
    public List<WasInvalidatedBy> getWasInvalidatedBy() {
        if (wasInvalidatedBy == null) {
            wasInvalidatedBy = new ArrayList<WasInvalidatedBy>();
        }
        return this.wasInvalidatedBy;
    }

    /**
     * Gets the value of the wasDerivedFrom property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wasDerivedFrom property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWasDerivedFrom().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WasDerivedFrom }
     * @return a list of {@link WasDerivedFrom} objects
     * 
     */
    public List<WasDerivedFrom> getWasDerivedFrom() {
        if (wasDerivedFrom == null) {
            wasDerivedFrom = new ArrayList<WasDerivedFrom>();
        }
        return this.wasDerivedFrom;
    }

    /**
     * Gets the value of the agent property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the agent property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAgent().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Agent }
     * @return a list of {@link Agent} objects
     * 
     */
    public List<Agent> getAgent() {
        if (agent == null) {
            agent = new ArrayList<Agent>();
        }
        return this.agent;
    }

    /**
     * Gets the value of the wasAttributedTo property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wasAttributedTo property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWasAttributedTo().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WasAttributedTo }
     * @return a list of {@link WasAttributedTo} objects
     * 
     */
    public List<WasAttributedTo> getWasAttributedTo() {
        if (wasAttributedTo == null) {
            wasAttributedTo = new ArrayList<WasAttributedTo>();
        }
        return this.wasAttributedTo;
    }

    /**
     * Gets the value of the wasAssociatedWith property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wasAssociatedWith property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWasAssociatedWith().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WasAssociatedWith }
     * @return a list of {@link WasAssociatedWith} objects
     * 
     */
    public List<WasAssociatedWith> getWasAssociatedWith() {
        if (wasAssociatedWith == null) {
            wasAssociatedWith = new ArrayList<WasAssociatedWith>();
        }
        return this.wasAssociatedWith;
    }

    /**
     * Gets the value of the actedOnBehalfOf property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the actedOnBehalfOf property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActedOnBehalfOf().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ActedOnBehalfOf }
     * @return a list of {@link ActedOnBehalfOf} objects
     * 
     */
    public List<ActedOnBehalfOf> getActedOnBehalfOf() {
        if (actedOnBehalfOf == null) {
            actedOnBehalfOf = new ArrayList<ActedOnBehalfOf>();
        }
        return this.actedOnBehalfOf;
    }

    /**
     * Gets the value of the wasInfluencedBy property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the wasInfluencedBy property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getWasInfluencedBy().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link WasInfluencedBy }
     * @return a list of {@link WasInfluencedBy} objects
     * 
     */
    public List<WasInfluencedBy> getWasInfluencedBy() {
        if (wasInfluencedBy == null) {
            wasInfluencedBy = new ArrayList<WasInfluencedBy>();
        }
        return this.wasInfluencedBy;
    }

    /**
     * Gets the value of the specializationOf property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the specializationOf property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSpecializationOf().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SpecializationOf }
     * @return a list of {@link SpecializationOf} objects
     * 
     */
    public List<SpecializationOf> getSpecializationOf() {
        if (specializationOf == null) {
            specializationOf = new ArrayList<SpecializationOf>();
        }
        return this.specializationOf;
    }

    /**
     * Gets the value of the alternateOf property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the alternateOf property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAlternateOf().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AlternateOf }
     * @return a list of {@link AlternateOf} objects
     * 
     */
    public List<AlternateOf> getAlternateOf() {
        if (alternateOf == null) {
            alternateOf = new ArrayList<AlternateOf>();
        }
        return this.alternateOf;
    }

    /**
     * Gets the value of the hadMember property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the hadMember property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHadMember().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link HadMember }
     * @return a list of {@link HadMember} objects
     * 
     */
    public List<HadMember> getHadMember() {
        if (hadMember == null) {
            hadMember = new ArrayList<HadMember>();
        }
        return this.hadMember;
    }

    /**
     * Gets the value of the mentionOf property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the mentionOf property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMentionOf().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MentionOf }
     * @return a list of {@link MentionOf} objects
     * 
     */
    public List<MentionOf> getMentionOf() {
        if (mentionOf == null) {
            mentionOf = new ArrayList<MentionOf>();
        }
        return this.mentionOf;
    }



    /**
     * Gets the value of the hadDictionaryMember property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the hadDictionaryMember property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHadDictionaryMember().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DictionaryMembership }
     * @return a list of {@link DictionaryMembership} objects
     * 
     */
    public List<DictionaryMembership> getHadDictionaryMember() {
        if (hadDictionaryMember == null) {
            hadDictionaryMember = new ArrayList<DictionaryMembership>();
        }
        return this.hadDictionaryMember;
    }

    /**
     * Gets the value of the derivedByInsertionFrom property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the derivedByInsertionFrom property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDerivedByInsertionFrom().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DerivedByInsertionFrom }
     * @return a list of {@link DerivedByInsertionFrom} objects
     * 
     */
    public List<DerivedByInsertionFrom> getDerivedByInsertionFrom() {
        if (derivedByInsertionFrom == null) {
            derivedByInsertionFrom = new ArrayList<DerivedByInsertionFrom>();
        }
        return this.derivedByInsertionFrom;
    }

    /**
     * Gets the value of the derivedByRemovalFrom property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the derivedByRemovalFrom property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDerivedByRemovalFrom().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DerivedByRemovalFrom }
     * @return a list of {@link DerivedByRemovalFrom} objects
     * 
     */
    public List<DerivedByRemovalFrom> getDerivedByRemovalFrom() {
        if (derivedByRemovalFrom == null) {
            derivedByRemovalFrom = new ArrayList<DerivedByRemovalFrom>();
        }
        return this.derivedByRemovalFrom;
    }

  

    /**
     * Gets the value of the key property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getKey() {
        return key;
    }

    /**
     * Sets the value of the key property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setKey(String value) {
        this.key = value;
    }

    public void equals(Object object, EqualsBuilder equalsBuilder) {
        if (!(object instanceof TypeReport)) {
            equalsBuilder.appendSuper(false);
            return ;
        }
        if (this == object) {
            return ;
        }
        final TypeReport that = ((TypeReport) object);
        equalsBuilder.append(this.getEntity(), that.getEntity());
        equalsBuilder.append(this.getActivity(), that.getActivity());
        equalsBuilder.append(this.getWasGeneratedBy(), that.getWasGeneratedBy());
        equalsBuilder.append(this.getUsed(), that.getUsed());
        equalsBuilder.append(this.getWasInformedBy(), that.getWasInformedBy());
        equalsBuilder.append(this.getWasStartedBy(), that.getWasStartedBy());
        equalsBuilder.append(this.getWasEndedBy(), that.getWasEndedBy());
        equalsBuilder.append(this.getWasInvalidatedBy(), that.getWasInvalidatedBy());
        equalsBuilder.append(this.getWasDerivedFrom(), that.getWasDerivedFrom());
        equalsBuilder.append(this.getAgent(), that.getAgent());
        equalsBuilder.append(this.getWasAttributedTo(), that.getWasAttributedTo());
        equalsBuilder.append(this.getWasAssociatedWith(), that.getWasAssociatedWith());
        equalsBuilder.append(this.getActedOnBehalfOf(), that.getActedOnBehalfOf());
        equalsBuilder.append(this.getWasInfluencedBy(), that.getWasInfluencedBy());
        equalsBuilder.append(this.getSpecializationOf(), that.getSpecializationOf());
        equalsBuilder.append(this.getAlternateOf(), that.getAlternateOf());
        equalsBuilder.append(this.getHadMember(), that.getHadMember());
        equalsBuilder.append(this.getMentionOf(), that.getMentionOf());
       equalsBuilder.append(this.getHadDictionaryMember(), that.getHadDictionaryMember());
        equalsBuilder.append(this.getDerivedByInsertionFrom(), that.getDerivedByInsertionFrom());
        equalsBuilder.append(this.getDerivedByRemovalFrom(), that.getDerivedByRemovalFrom());
        equalsBuilder.append(this.getKey(), that.getKey());
    }

    public boolean equals(Object object) {
        if (!(object instanceof TypeReport)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final EqualsBuilder equalsBuilder = new EqualsBuilder();
        equals(object, equalsBuilder);
        return equalsBuilder.isEquals();
    }

    public void hashCode(HashCodeBuilder hashCodeBuilder) {
        hashCodeBuilder.append(this.getEntity());
        hashCodeBuilder.append(this.getActivity());
        hashCodeBuilder.append(this.getWasGeneratedBy());
        hashCodeBuilder.append(this.getUsed());
        hashCodeBuilder.append(this.getWasInformedBy());
        hashCodeBuilder.append(this.getWasStartedBy());
        hashCodeBuilder.append(this.getWasEndedBy());
        hashCodeBuilder.append(this.getWasInvalidatedBy());
        hashCodeBuilder.append(this.getWasDerivedFrom());
        hashCodeBuilder.append(this.getAgent());
        hashCodeBuilder.append(this.getWasAttributedTo());
        hashCodeBuilder.append(this.getWasAssociatedWith());
        hashCodeBuilder.append(this.getActedOnBehalfOf());
        hashCodeBuilder.append(this.getWasInfluencedBy());
        hashCodeBuilder.append(this.getSpecializationOf());
        hashCodeBuilder.append(this.getAlternateOf());
        hashCodeBuilder.append(this.getHadMember());
        hashCodeBuilder.append(this.getMentionOf());

        hashCodeBuilder.append(this.getHadDictionaryMember());
        hashCodeBuilder.append(this.getDerivedByInsertionFrom());
        hashCodeBuilder.append(this.getDerivedByRemovalFrom());
        hashCodeBuilder.append(this.getKey());
    }

    public int hashCode() {
        final HashCodeBuilder hashCodeBuilder = new HashCodeBuilder();
        hashCode(hashCodeBuilder);
        return hashCodeBuilder.toHashCode();
    }

    public void toString(ToStringBuilder toStringBuilder) {
        {
            List<Entity> theEntity;
            theEntity = this.getEntity();
            toStringBuilder.append("entity", theEntity);
        }
        {
            List<Activity> theActivity;
            theActivity = this.getActivity();
            toStringBuilder.append("activity", theActivity);
        }
        {
            List<WasGeneratedBy> theWasGeneratedBy;
            theWasGeneratedBy = this.getWasGeneratedBy();
            toStringBuilder.append("wasGeneratedBy", theWasGeneratedBy);
        }
        {
            List<Used> theUsed;
            theUsed = this.getUsed();
            toStringBuilder.append("used", theUsed);
        }
        {
            List<WasInformedBy> theWasInformedBy;
            theWasInformedBy = this.getWasInformedBy();
            toStringBuilder.append("wasInformedBy", theWasInformedBy);
        }
        {
            List<WasStartedBy> theWasStartedBy;
            theWasStartedBy = this.getWasStartedBy();
            toStringBuilder.append("wasStartedBy", theWasStartedBy);
        }
        {
            List<WasEndedBy> theWasEndedBy;
            theWasEndedBy = this.getWasEndedBy();
            toStringBuilder.append("wasEndedBy", theWasEndedBy);
        }
        {
            List<WasInvalidatedBy> theWasInvalidatedBy;
            theWasInvalidatedBy = this.getWasInvalidatedBy();
            toStringBuilder.append("wasInvalidatedBy", theWasInvalidatedBy);
        }
        {
            List<WasDerivedFrom> theWasDerivedFrom;
            theWasDerivedFrom = this.getWasDerivedFrom();
            toStringBuilder.append("wasDerivedFrom", theWasDerivedFrom);
        }
        {
            List<Agent> theAgent;
            theAgent = this.getAgent();
            toStringBuilder.append("agent", theAgent);
        }
        {
            List<WasAttributedTo> theWasAttributedTo;
            theWasAttributedTo = this.getWasAttributedTo();
            toStringBuilder.append("wasAttributedTo", theWasAttributedTo);
        }
        {
            List<WasAssociatedWith> theWasAssociatedWith;
            theWasAssociatedWith = this.getWasAssociatedWith();
            toStringBuilder.append("wasAssociatedWith", theWasAssociatedWith);
        }
        {
            List<ActedOnBehalfOf> theActedOnBehalfOf;
            theActedOnBehalfOf = this.getActedOnBehalfOf();
            toStringBuilder.append("actedOnBehalfOf", theActedOnBehalfOf);
        }
        {
            List<WasInfluencedBy> theWasInfluencedBy;
            theWasInfluencedBy = this.getWasInfluencedBy();
            toStringBuilder.append("wasInfluencedBy", theWasInfluencedBy);
        }
        {
            List<SpecializationOf> theSpecializationOf;
            theSpecializationOf = this.getSpecializationOf();
            toStringBuilder.append("specializationOf", theSpecializationOf);
        }
        {
            List<AlternateOf> theAlternateOf;
            theAlternateOf = this.getAlternateOf();
            toStringBuilder.append("alternateOf", theAlternateOf);
        }
        {
            List<HadMember> theHadMember;
            theHadMember = this.getHadMember();
            toStringBuilder.append("hadMember", theHadMember);
        }
        {
            List<MentionOf> theMentionOf;
            theMentionOf = this.getMentionOf();
            toStringBuilder.append("mentionOf", theMentionOf);
        }

        {
            List<DictionaryMembership> theHadDictionaryMember;
            theHadDictionaryMember = this.getHadDictionaryMember();
            toStringBuilder.append("hadDictionaryMember", theHadDictionaryMember);
        }
        {
            List<DerivedByInsertionFrom> theDerivedByInsertionFrom;
            theDerivedByInsertionFrom = this.getDerivedByInsertionFrom();
            toStringBuilder.append("derivedByInsertionFrom", theDerivedByInsertionFrom);
        }
        {
            List<DerivedByRemovalFrom> theDerivedByRemovalFrom;
            theDerivedByRemovalFrom = this.getDerivedByRemovalFrom();
            toStringBuilder.append("derivedByRemovalFrom", theDerivedByRemovalFrom);
        }
        {
            String theKey;
            theKey = this.getKey();
            toStringBuilder.append("key", theKey);
        }
    }

    public String toString() {
        final ToStringBuilder toStringBuilder = new ToStringBuilder(this);
        toString(toStringBuilder);
        return toStringBuilder.toString();
    }

}
