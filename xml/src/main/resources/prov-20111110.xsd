<?xml version="1.0" encoding="UTF-8"?>

<!-- Authors: Luc Moreau

     *WARNING*
     Transformation of the OPM OPMX schema into PROV compatible.
     Purely tentative at this stage. Still some OPMX legacy.
     PROV-DM not fully encoded yet.
     Only work in progress.
  -->

<!-- Known issues:

     - introduce Notes and hasAnnotation, remove OPMX embedded annotations
     - currently, no optional-predefined attribute for activity (time,recipeLink). challenge with xs:any.
     -->


<xs:schema targetNamespace="http://openprovenance.org/prov-xml#"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:prov="http://openprovenance.org/prov-xml#"
           xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified"
           jxb:version="2.0">

  <xs:element name="activity" type="prov:Activity"/>
  <xs:complexType name="Activity">
	<xs:sequence>
	  <xs:any maxOccurs="unbounded" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:string"/>
  </xs:complexType>


  <xs:element name="entity" type="prov:Entity"/>
  <xs:complexType name="Entity">
	<xs:sequence>
	  <xs:any maxOccurs="unbounded" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:string"/>
  </xs:complexType>

  <xs:element name="agent" type="prov:Agent"/>
  <xs:complexType name="Agent">
	<xs:sequence>
	  <xs:any maxOccurs="unbounded" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:string"/>
  </xs:complexType>

  <xs:element name="note" type="prov:Note"/>
  <xs:complexType name="Note">
	<xs:sequence>
	  <xs:any maxOccurs="unbounded" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:string"/>
  </xs:complexType>



  <xs:complexType name="Used">
	<xs:sequence>
	  <xs:element name="time"    type="xs:dateTime" minOccurs="0"/>
	  <xs:element name="effect"  type="prov:ActivityRef"/>
	  <xs:element name="cause"   type="prov:EntityRef"/>
	  <xs:any maxOccurs="unbounded" minOccurs="0"/>
	</xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="WasGeneratedBy">
	<xs:sequence>
	  <xs:element name="time"    type="xs:dateTime" minOccurs="0"/>
	  <xs:element name="effect"  type="prov:EntityRef"/>
	  <xs:element name="cause"   type="prov:ActivityRef"/>
	  <xs:any maxOccurs="unbounded" minOccurs="0"/>
	</xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="WasControlledBy">
	<xs:sequence>
	  <xs:element name="startTime"   type="xs:dateTime" minOccurs="0"/>
	  <xs:element name="endTime"     type="xs:dateTime" minOccurs="0"/>
	  <xs:element name="effect"      type="prov:ActivityRef"/>
	  <xs:element name="cause"       type="prov:AgentRef"/>
	  <xs:any maxOccurs="unbounded" minOccurs="0"/>
	</xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="WasDerivedFrom">
	<xs:sequence>
	  <xs:element name="generation" type="prov:DependencyRef" minOccurs="0"/>
	  <xs:element name="usage"      type="prov:DependencyRef" minOccurs="0"/>
	  <xs:element name="activity"   type="prov:ActivityRef" minOccurs="0"/>
	  <xs:element name="effect"  type="prov:EntityRef"/>
	  <xs:element name="cause"   type="prov:EntityRef"/>
	  <xs:any maxOccurs="unbounded" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="WasInformedBy">
	<xs:sequence>
	  <xs:element name="time"    type="xs:dateTime" minOccurs="0"/>
	  <xs:element name="effect"  type="prov:ActivityRef"/>
	  <xs:element name="cause"   type="prov:ActivityRef"/>
	  <xs:any maxOccurs="unbounded" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="HasAnnotation">
	<xs:sequence>
	  <xs:element name="thing"   type="prov:NoteRef" minOccurs="1"/> <!-- note, just a ref to anything, really -->
	  <xs:element name="note"    type="prov:NoteRef" minOccurs="1"/>
	</xs:sequence>
    <xs:attribute name="id" type="xs:string"/>
  </xs:complexType>

  <xs:element name="label" type="xs:string"/>
  <xs:element name="type" type="xs:string"/>
  <xs:element name="role" type="prov:TypedLiteral"/>

  <xs:complexType name="TypedLiteral">
	<xs:simpleContent>
	  <xs:extension base="xs:string">
	    <xs:attribute name="type" type="xs:string"/>
	  </xs:extension>
	</xs:simpleContent>
  </xs:complexType>




  <xs:complexType name="ActivityRef">
	<xs:attribute name="ref" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="EntityRef">
	<xs:attribute name="ref" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="AgentRef">
	<xs:attribute name="ref" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="DependencyRef">
    <xs:attribute name="ref" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="NoteRef">
    <xs:attribute name="ref" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="Dependencies">
	<xs:sequence>
	  <xs:choice minOccurs="0" maxOccurs="unbounded">
		<xs:element name="used"               type="prov:Used"/>
		<xs:element name="wasGeneratedBy"     type="prov:WasGeneratedBy"/>
		<xs:element name="wasInformedBy"      type="prov:WasInformedBy"/>
		<xs:element name="wasDerivedFrom"     type="prov:WasDerivedFrom"/>
		<xs:element name="wasControlledBy"    type="prov:WasControlledBy"/>
		<xs:element name="hasAnnotation"      type="prov:HasAnnotation"/>
	  </xs:choice>
	</xs:sequence>
  </xs:complexType>


  <!-- BUNDLES -->

  <xs:element name="account" type="prov:Account"/>
  <xs:complexType name="Account">
	<xs:sequence>
	  <xs:element ref="prov:record"  minOccurs="1" maxOccurs="1"/>
	  <xs:element name="asserter" type="prov:AgentRef"  minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:string"/>
  </xs:complexType>

  <xs:element name="container" type="prov:Container">
	<xs:annotation>
	  <xs:documentation>A set of assertions about the provenance of things</xs:documentation>
	</xs:annotation>
  </xs:element>

  <xs:element name="record" type="prov:Record"/>
  <xs:complexType name="Record">
	<xs:sequence>
	  <xs:element ref="prov:account"  minOccurs="0" maxOccurs="unbounded"/>
	  <xs:element ref="prov:activity" minOccurs="0" maxOccurs="unbounded"/>
	  <xs:element ref="prov:entity"   minOccurs="0" maxOccurs="unbounded"/>
	  <xs:element ref="prov:agent"    minOccurs="0" maxOccurs="unbounded"/>
	  <xs:element ref="prov:note"     minOccurs="0" maxOccurs="unbounded"/>
	  <xs:element name="dependencies" type="prov:Dependencies" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="id" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="Container">
	<xs:sequence>
	  <xs:element ref="prov:record"  minOccurs="1" maxOccurs="unbounded"/>
	</xs:sequence>
  </xs:complexType>



  





</xs:schema>
